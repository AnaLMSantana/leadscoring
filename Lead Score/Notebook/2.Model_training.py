{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## <strong><span style=\"color:lightblue\">Test-Train Split </span></strong>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Sklearn libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import pickle\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn import metrics\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.feature_selection import RFE\n",
    "from sklearn.metrics import precision_score, recall_score\n",
    "from sklearn.metrics import precision_recall_curve\n",
    "from sklearn.metrics import f1_score\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import classification_report,confusion_matrix\n",
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "\n",
    "#statmodel libraries\n",
    "from statsmodels.stats.outliers_influence import variance_inflation_factor\n",
    "import statsmodels.api as sm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "leads = pd.read_pickle(r\"C:\\Users\\Ana\\OneDrive\\Documents\\Ironhack\\Week 9\\Final Project\\Lead Score\\Dataset\\leads-clean.pkl\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Do Not Email</th>\n",
       "      <th>Converted</th>\n",
       "      <th>TotalVisits</th>\n",
       "      <th>Total Time Spent on Website</th>\n",
       "      <th>Page Views Per Visit</th>\n",
       "      <th>Free_copy</th>\n",
       "      <th>Lead Origin_Landing Page Submission</th>\n",
       "      <th>Lead Origin_Lead Add Form</th>\n",
       "      <th>Lead Origin_Lead Import</th>\n",
       "      <th>Lead Origin_Quick Add Form</th>\n",
       "      <th>...</th>\n",
       "      <th>Specialization_Retail Management</th>\n",
       "      <th>Specialization_Rural and Agribusiness</th>\n",
       "      <th>Specialization_Services Excellence</th>\n",
       "      <th>Specialization_Supply Chain Management</th>\n",
       "      <th>Specialization_Travel and Tourism</th>\n",
       "      <th>Current_occupation_Housewife</th>\n",
       "      <th>Current_occupation_Other</th>\n",
       "      <th>Current_occupation_Student</th>\n",
       "      <th>Current_occupation_Unemployed</th>\n",
       "      <th>Current_occupation_Working Professional</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>674</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1532</td>\n",
       "      <td>2.00</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>305</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1428</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9235</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1845</td>\n",
       "      <td>2.67</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9236</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>238</td>\n",
       "      <td>2.00</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9237</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>199</td>\n",
       "      <td>2.00</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9238</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3.0</td>\n",
       "      <td>499</td>\n",
       "      <td>3.00</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9239</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1279</td>\n",
       "      <td>3.00</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>9240 rows × 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Do Not Email  Converted  TotalVisits  Total Time Spent on Website  \\\n",
       "0                0          0          0.0                            0   \n",
       "1                0          0          5.0                          674   \n",
       "2                0          1          2.0                         1532   \n",
       "3                0          0          1.0                          305   \n",
       "4                0          1          2.0                         1428   \n",
       "...            ...        ...          ...                          ...   \n",
       "9235             1          1          8.0                         1845   \n",
       "9236             0          0          2.0                          238   \n",
       "9237             1          0          2.0                          199   \n",
       "9238             0          1          3.0                          499   \n",
       "9239             0          1          6.0                         1279   \n",
       "\n",
       "      Page Views Per Visit  Free_copy  Lead Origin_Landing Page Submission  \\\n",
       "0                     0.00          0                                False   \n",
       "1                     2.50          0                                False   \n",
       "2                     2.00          1                                 True   \n",
       "3                     1.00          0                                 True   \n",
       "4                     1.00          0                                 True   \n",
       "...                    ...        ...                                  ...   \n",
       "9235                  2.67          0                                 True   \n",
       "9236                  2.00          1                                 True   \n",
       "9237                  2.00          1                                 True   \n",
       "9238                  3.00          0                                 True   \n",
       "9239                  3.00          1                                 True   \n",
       "\n",
       "      Lead Origin_Lead Add Form  Lead Origin_Lead Import  \\\n",
       "0                         False                    False   \n",
       "1                         False                    False   \n",
       "2                         False                    False   \n",
       "3                         False                    False   \n",
       "4                         False                    False   \n",
       "...                         ...                      ...   \n",
       "9235                      False                    False   \n",
       "9236                      False                    False   \n",
       "9237                      False                    False   \n",
       "9238                      False                    False   \n",
       "9239                      False                    False   \n",
       "\n",
       "      Lead Origin_Quick Add Form  ...  Specialization_Retail Management  \\\n",
       "0                          False  ...                             False   \n",
       "1                          False  ...                             False   \n",
       "2                          False  ...                             False   \n",
       "3                          False  ...                             False   \n",
       "4                          False  ...                             False   \n",
       "...                          ...  ...                               ...   \n",
       "9235                       False  ...                             False   \n",
       "9236                       False  ...                             False   \n",
       "9237                       False  ...                             False   \n",
       "9238                       False  ...                             False   \n",
       "9239                       False  ...                             False   \n",
       "\n",
       "      Specialization_Rural and Agribusiness  \\\n",
       "0                                     False   \n",
       "1                                     False   \n",
       "2                                     False   \n",
       "3                                     False   \n",
       "4                                     False   \n",
       "...                                     ...   \n",
       "9235                                  False   \n",
       "9236                                  False   \n",
       "9237                                  False   \n",
       "9238                                  False   \n",
       "9239                                  False   \n",
       "\n",
       "      Specialization_Services Excellence  \\\n",
       "0                                  False   \n",
       "1                                  False   \n",
       "2                                  False   \n",
       "3                                  False   \n",
       "4                                  False   \n",
       "...                                  ...   \n",
       "9235                               False   \n",
       "9236                               False   \n",
       "9237                               False   \n",
       "9238                               False   \n",
       "9239                               False   \n",
       "\n",
       "      Specialization_Supply Chain Management  \\\n",
       "0                                      False   \n",
       "1                                      False   \n",
       "2                                      False   \n",
       "3                                      False   \n",
       "4                                      False   \n",
       "...                                      ...   \n",
       "9235                                   False   \n",
       "9236                                   False   \n",
       "9237                                   False   \n",
       "9238                                   False   \n",
       "9239                                    True   \n",
       "\n",
       "      Specialization_Travel and Tourism  Current_occupation_Housewife  \\\n",
       "0                                 False                         False   \n",
       "1                                 False                         False   \n",
       "2                                 False                         False   \n",
       "3                                 False                         False   \n",
       "4                                 False                         False   \n",
       "...                                 ...                           ...   \n",
       "9235                              False                         False   \n",
       "9236                              False                         False   \n",
       "9237                              False                         False   \n",
       "9238                              False                         False   \n",
       "9239                              False                         False   \n",
       "\n",
       "      Current_occupation_Other  Current_occupation_Student  \\\n",
       "0                        False                       False   \n",
       "1                        False                       False   \n",
       "2                        False                        True   \n",
       "3                        False                       False   \n",
       "4                        False                       False   \n",
       "...                        ...                         ...   \n",
       "9235                     False                       False   \n",
       "9236                     False                       False   \n",
       "9237                     False                       False   \n",
       "9238                     False                       False   \n",
       "9239                     False                       False   \n",
       "\n",
       "      Current_occupation_Unemployed  Current_occupation_Working Professional  \n",
       "0                              True                                    False  \n",
       "1                              True                                    False  \n",
       "2                             False                                    False  \n",
       "3                              True                                    False  \n",
       "4                              True                                    False  \n",
       "...                             ...                                      ...  \n",
       "9235                           True                                    False  \n",
       "9236                           True                                    False  \n",
       "9237                           True                                    False  \n",
       "9238                           True                                    False  \n",
       "9239                           True                                    False  \n",
       "\n",
       "[9240 rows x 49 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "leads"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Do Not Email', 'Converted', 'TotalVisits',\n",
       "       'Total Time Spent on Website', 'Page Views Per Visit', 'Free_copy',\n",
       "       'Lead Origin_Landing Page Submission', 'Lead Origin_Lead Add Form',\n",
       "       'Lead Origin_Lead Import', 'Lead Origin_Quick Add Form',\n",
       "       'Lead Source_Facebook', 'Lead Source_Google', 'Lead Source_Olark Chat',\n",
       "       'Lead Source_Organic Search', 'Lead Source_Others',\n",
       "       'Lead Source_Reference', 'Lead Source_Referral Sites',\n",
       "       'Lead Source_Welingak Website', 'Last Activity_Email Bounced',\n",
       "       'Last Activity_Email Link Clicked', 'Last Activity_Email Opened',\n",
       "       'Last Activity_Form Submitted on Website',\n",
       "       'Last Activity_Olark Chat Conversation', 'Last Activity_Others',\n",
       "       'Last Activity_Page Visited on Website', 'Last Activity_SMS Sent',\n",
       "       'Specialization_Business Administration', 'Specialization_E-Business',\n",
       "       'Specialization_E-COMMERCE', 'Specialization_Finance Management',\n",
       "       'Specialization_Healthcare Management',\n",
       "       'Specialization_Hospitality Management',\n",
       "       'Specialization_Human Resource Management',\n",
       "       'Specialization_IT Projects Management',\n",
       "       'Specialization_International Business',\n",
       "       'Specialization_Marketing Management',\n",
       "       'Specialization_Media and Advertising',\n",
       "       'Specialization_Operations Management', 'Specialization_Others',\n",
       "       'Specialization_Retail Management',\n",
       "       'Specialization_Rural and Agribusiness',\n",
       "       'Specialization_Services Excellence',\n",
       "       'Specialization_Supply Chain Management',\n",
       "       'Specialization_Travel and Tourism', 'Current_occupation_Housewife',\n",
       "       'Current_occupation_Other', 'Current_occupation_Student',\n",
       "       'Current_occupation_Unemployed',\n",
       "       'Current_occupation_Working Professional'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "leads.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Test train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Predictor variables to x \n",
    "X = leads.drop(\"Converted\",axis=1)\n",
    "\n",
    "# targert variable to y\n",
    "y = leads[\"Converted\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Splitting the data into train and test\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.8, test_size=0.2, random_state=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "X_train shape: (7392, 48) \n",
      "y_train shape: (7392,)\n",
      "X_test shape: (1848, 48) \n",
      "y_test shape: (1848,)\n"
     ]
    }
   ],
   "source": [
    "print(\"X_train shape:\", X_train.shape,\"\\ny_train shape:\",y_train.shape)\n",
    "print(\"X_test shape:\", X_test.shape,\"\\ny_test shape:\",y_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Feature Scaling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# using standard scaler for scaling the features\n",
    "scaler = StandardScaler()\n",
    "\n",
    "# fetching int64 and float64 dtype columns from dataframe for scaling\n",
    "num_cols=X_train.select_dtypes(include=['int64','float64']).columns\n",
    "\n",
    "X_train[num_cols] = scaler.fit_transform(X_train[num_cols])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Do Not Email</th>\n",
       "      <th>TotalVisits</th>\n",
       "      <th>Total Time Spent on Website</th>\n",
       "      <th>Page Views Per Visit</th>\n",
       "      <th>Free_copy</th>\n",
       "      <th>Lead Origin_Landing Page Submission</th>\n",
       "      <th>Lead Origin_Lead Add Form</th>\n",
       "      <th>Lead Origin_Lead Import</th>\n",
       "      <th>Lead Origin_Quick Add Form</th>\n",
       "      <th>Lead Source_Facebook</th>\n",
       "      <th>...</th>\n",
       "      <th>Specialization_Retail Management</th>\n",
       "      <th>Specialization_Rural and Agribusiness</th>\n",
       "      <th>Specialization_Services Excellence</th>\n",
       "      <th>Specialization_Supply Chain Management</th>\n",
       "      <th>Specialization_Travel and Tourism</th>\n",
       "      <th>Current_occupation_Housewife</th>\n",
       "      <th>Current_occupation_Other</th>\n",
       "      <th>Current_occupation_Student</th>\n",
       "      <th>Current_occupation_Unemployed</th>\n",
       "      <th>Current_occupation_Working Professional</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7263</th>\n",
       "      <td>-0.293157</td>\n",
       "      <td>-1.069308</td>\n",
       "      <td>-0.884942</td>\n",
       "      <td>-1.186261</td>\n",
       "      <td>-0.673351</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6468</th>\n",
       "      <td>-0.293157</td>\n",
       "      <td>-0.405873</td>\n",
       "      <td>-0.632201</td>\n",
       "      <td>-0.143407</td>\n",
       "      <td>1.485110</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7833</th>\n",
       "      <td>-0.293157</td>\n",
       "      <td>-0.405873</td>\n",
       "      <td>-0.740257</td>\n",
       "      <td>-0.143407</td>\n",
       "      <td>1.485110</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4461</th>\n",
       "      <td>-0.293157</td>\n",
       "      <td>0.257561</td>\n",
       "      <td>2.006923</td>\n",
       "      <td>0.899446</td>\n",
       "      <td>-0.673351</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8453</th>\n",
       "      <td>-0.293157</td>\n",
       "      <td>-1.069308</td>\n",
       "      <td>-0.884942</td>\n",
       "      <td>-1.186261</td>\n",
       "      <td>-0.673351</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 48 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Do Not Email  TotalVisits  Total Time Spent on Website  \\\n",
       "7263     -0.293157    -1.069308                    -0.884942   \n",
       "6468     -0.293157    -0.405873                    -0.632201   \n",
       "7833     -0.293157    -0.405873                    -0.740257   \n",
       "4461     -0.293157     0.257561                     2.006923   \n",
       "8453     -0.293157    -1.069308                    -0.884942   \n",
       "\n",
       "      Page Views Per Visit  Free_copy  Lead Origin_Landing Page Submission  \\\n",
       "7263             -1.186261  -0.673351                                False   \n",
       "6468             -0.143407   1.485110                                 True   \n",
       "7833             -0.143407   1.485110                                 True   \n",
       "4461              0.899446  -0.673351                                 True   \n",
       "8453             -1.186261  -0.673351                                False   \n",
       "\n",
       "      Lead Origin_Lead Add Form  Lead Origin_Lead Import  \\\n",
       "7263                      False                    False   \n",
       "6468                      False                    False   \n",
       "7833                      False                    False   \n",
       "4461                      False                    False   \n",
       "8453                      False                    False   \n",
       "\n",
       "      Lead Origin_Quick Add Form  Lead Source_Facebook  ...  \\\n",
       "7263                       False                 False  ...   \n",
       "6468                       False                 False  ...   \n",
       "7833                       False                 False  ...   \n",
       "4461                       False                 False  ...   \n",
       "8453                       False                 False  ...   \n",
       "\n",
       "      Specialization_Retail Management  Specialization_Rural and Agribusiness  \\\n",
       "7263                             False                                  False   \n",
       "6468                             False                                  False   \n",
       "7833                             False                                  False   \n",
       "4461                             False                                  False   \n",
       "8453                             False                                  False   \n",
       "\n",
       "      Specialization_Services Excellence  \\\n",
       "7263                               False   \n",
       "6468                               False   \n",
       "7833                               False   \n",
       "4461                               False   \n",
       "8453                               False   \n",
       "\n",
       "      Specialization_Supply Chain Management  \\\n",
       "7263                                   False   \n",
       "6468                                   False   \n",
       "7833                                   False   \n",
       "4461                                   False   \n",
       "8453                                   False   \n",
       "\n",
       "      Specialization_Travel and Tourism  Current_occupation_Housewife  \\\n",
       "7263                              False                         False   \n",
       "6468                              False                         False   \n",
       "7833                              False                         False   \n",
       "4461                              False                         False   \n",
       "8453                              False                         False   \n",
       "\n",
       "      Current_occupation_Other  Current_occupation_Student  \\\n",
       "7263                     False                       False   \n",
       "6468                     False                       False   \n",
       "7833                     False                       False   \n",
       "4461                     False                       False   \n",
       "8453                     False                       False   \n",
       "\n",
       "      Current_occupation_Unemployed  Current_occupation_Working Professional  \n",
       "7263                           True                                    False  \n",
       "6468                           True                                    False  \n",
       "7833                           True                                    False  \n",
       "4461                           True                                    False  \n",
       "8453                           True                                    False  \n",
       "\n",
       "[5 rows x 48 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# X-train dataframe after standard scaling\n",
    "X_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "38.53896103896104"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lead_con_rate = (sum(leads[\"Converted\"])/len(leads[\"Converted\"].index))*100\n",
    "lead_con_rate"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## <strong><span style=\"color:lightblue\">Model Building </span></strong>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Feature Selection "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.linear_model import SGDClassifier\n",
    "from sklearn.ensemble import AdaBoostClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "\n",
    "\n",
    "import xgboost as xgb\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.1 Logistic Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.82      0.90      0.86      1107\n",
      "           1       0.83      0.70      0.76       741\n",
      "\n",
      "    accuracy                           0.82      1848\n",
      "   macro avg       0.82      0.80      0.81      1848\n",
      "weighted avg       0.82      0.82      0.82      1848\n",
      "\n",
      "Accuracy: 0.8192640692640693\n",
      "Mean Square Error: 0.4251304867166441\n"
     ]
    }
   ],
   "source": [
    "X = leads.drop(\"Converted\", axis=1)\n",
    "y = leads[\"Converted\"]\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Train and evaluate Logistic Regression\n",
    "logistic_regression = LogisticRegression(max_iter=1000, random_state=42)\n",
    "logistic_regression.fit(X_train, y_train)\n",
    "\n",
    "# Predict on the test set and evaluate\n",
    "y_pred_logistic = logistic_regression.predict(X_test)\n",
    "accuracy_logistic = accuracy_score(y_test, y_pred_logistic)\n",
    "class_report_logistic = classification_report(y_test, y_pred_logistic)\n",
    "print(class_report_logistic)\n",
    "print(\"Accuracy:\",accuracy_logistic)\n",
    "print(\"Mean Square Error:\", np.sqrt(metrics.mean_squared_error(y_test, y_pred_logistic)))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.2 Decision Tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.81      0.80      0.80      1107\n",
      "           1       0.71      0.71      0.71       741\n",
      "\n",
      "    accuracy                           0.77      1848\n",
      "   macro avg       0.76      0.76      0.76      1848\n",
      "weighted avg       0.77      0.77      0.77      1848\n",
      "\n",
      "Accuracy: 0.7651515151515151\n",
      "Mean Square Error: 0.4846116845975599\n"
     ]
    }
   ],
   "source": [
    "# Train and evaluate Decision Tree\n",
    "decision_tree = DecisionTreeClassifier(random_state=42)\n",
    "decision_tree.fit(X_train, y_train)\n",
    "\n",
    "# Predict on the test set and evaluate\n",
    "y_pred_dt = decision_tree.predict(X_test)\n",
    "accuracy_dt = accuracy_score(y_test, y_pred_dt)\n",
    "class_report_dt = classification_report(y_test, y_pred_dt)\n",
    "mqrt = np.sqrt(metrics.mean_squared_error(y_test, y_pred_dt))\n",
    "\n",
    "print(class_report_dt)\n",
    "print(\"Accuracy:\",accuracy_dt)\n",
    "print(\"Mean Square Error:\", mqrt)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.3 Random Forest Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.83      0.85      0.84      1107\n",
      "           1       0.77      0.74      0.76       741\n",
      "\n",
      "    accuracy                           0.81      1848\n",
      "   macro avg       0.80      0.80      0.80      1848\n",
      "weighted avg       0.81      0.81      0.81      1848\n",
      "\n",
      "Accuracy: 0.8068181818181818\n",
      "Mean Square Error: 0.4395245364957663\n"
     ]
    }
   ],
   "source": [
    "\n",
    "# Train and evaluate Random Forest\n",
    "random_forest = RandomForestClassifier(random_state=42)\n",
    "random_forest.fit(X_train, y_train)\n",
    "\n",
    "# Predict on the test set and evaluate\n",
    "y_pred_rf = random_forest.predict(X_test)\n",
    "accuracy_rf = accuracy_score(y_test, y_pred_rf)\n",
    "class_report_rf = classification_report(y_test, y_pred_rf)\n",
    "mqrt = np.sqrt(metrics.mean_squared_error(y_test, y_pred_rf))\n",
    "\n",
    "print(class_report_rf)\n",
    "print(\"Accuracy:\",accuracy_rf)\n",
    "print(\"Mean Square Error:\", mqrt)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.4 XGBOOST"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\Ana\\anaconda3\\lib\\site-packages\\xgboost\\sklearn.py:1395: UserWarning: `use_label_encoder` is deprecated in 1.7.0.\n",
      "  warnings.warn(\"`use_label_encoder` is deprecated in 1.7.0.\")\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.85      0.87      0.86      1107\n",
      "           1       0.79      0.76      0.78       741\n",
      "\n",
      "    accuracy                           0.83      1848\n",
      "   macro avg       0.82      0.82      0.82      1848\n",
      "weighted avg       0.82      0.83      0.83      1848\n",
      "\n",
      "Accuracy: 0.8257575757575758\n",
      "Mean Square Error: 0.4174235549683609\n"
     ]
    }
   ],
   "source": [
    "# Train and evaluate XGBoost\n",
    "xgboost_model = xgb.XGBClassifier(random_state=42, use_label_encoder=False, eval_metric='logloss')\n",
    "xgboost_model.fit(X_train, y_train)\n",
    "\n",
    "# Predict on the test set and evaluate\n",
    "y_pred_xgb = xgboost_model.predict(X_test)\n",
    "accuracy_xgb = accuracy_score(y_test, y_pred_xgb)\n",
    "class_report_xgb = classification_report(y_test, y_pred_xgb)\n",
    "mqrt = np.sqrt(metrics.mean_squared_error(y_test, y_pred_xgb))\n",
    "\n",
    "print(class_report_xgb)\n",
    "print(\"Accuracy:\",accuracy_xgb)\n",
    "print(\"Mean Square Error:\", mqrt)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "from joblib import dump"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.5 Naive Bayes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.71      0.93      0.81      1107\n",
      "           1       0.80      0.44      0.57       741\n",
      "\n",
      "    accuracy                           0.73      1848\n",
      "   macro avg       0.76      0.68      0.69      1848\n",
      "weighted avg       0.75      0.73      0.71      1848\n",
      "\n",
      "Accuracy: 0.7321428571428571\n",
      "Mean Square Error: 0.5175491695067657\n"
     ]
    }
   ],
   "source": [
    "\n",
    "# Train and evaluate Naive Bayes\n",
    "naive_bayes_model = GaussianNB()\n",
    "naive_bayes_model.fit(X_train, y_train)\n",
    "\n",
    "# Predict on the test set and evaluate\n",
    "y_pred_nb = naive_bayes_model.predict(X_test)\n",
    "accuracy_nb = accuracy_score(y_test, y_pred_nb)\n",
    "class_report_nb = classification_report(y_test, y_pred_nb)\n",
    "msqrt = np.sqrt(metrics.mean_squared_error(y_test, y_pred_nb))\n",
    "\n",
    "print(class_report_nb)\n",
    "print(\"Accuracy:\",accuracy_nb)\n",
    "print(\"Mean Square Error:\", msqrt)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.6 ADABOOST"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.83      0.89      0.86      1107\n",
      "           1       0.81      0.72      0.77       741\n",
      "\n",
      "    accuracy                           0.82      1848\n",
      "   macro avg       0.82      0.81      0.81      1848\n",
      "weighted avg       0.82      0.82      0.82      1848\n",
      "\n",
      "Accuracy: 0.821969696969697\n",
      "Mean Square Error: 0.42193637320134303\n"
     ]
    }
   ],
   "source": [
    "\n",
    "# Train and evaluate AdaBoost\n",
    "adaboost_model = AdaBoostClassifier(random_state=100)\n",
    "adaboost_model.fit(X_train, y_train)\n",
    "\n",
    "# Predict on the test set and evaluate\n",
    "y_pred_adaboost = adaboost_model.predict(X_test)\n",
    "accuracy_adaboost = accuracy_score(y_test, y_pred_adaboost)\n",
    "class_report_adaboost = classification_report(y_test, y_pred_adaboost)\n",
    "msqrt = np.sqrt(metrics.mean_squared_error(y_test, y_pred_adaboost))\n",
    "\n",
    "\n",
    "print(class_report_adaboost)\n",
    "print(\"Accuracy:\",accuracy_adaboost)\n",
    "print(\"Mean Square Error:\", msqrt)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1.7 Gradient Boost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.85      0.87      0.86      1107\n",
      "           1       0.80      0.78      0.79       741\n",
      "\n",
      "    accuracy                           0.83      1848\n",
      "   macro avg       0.83      0.82      0.83      1848\n",
      "weighted avg       0.83      0.83      0.83      1848\n",
      "\n",
      "Accuracy: 0.8338744588744589\n",
      "Mean Square Error: 0.4075850109186317\n"
     ]
    }
   ],
   "source": [
    "\n",
    "# Train and evaluate Gradient Boosting Machines (GBM)\n",
    "gbm_model = GradientBoostingClassifier(random_state=42)\n",
    "gbm_model.fit(X_train, y_train)\n",
    "\n",
    "# Predict on the test set and evaluate\n",
    "y_pred_gbm = gbm_model.predict(X_test)\n",
    "accuracy_gbm = accuracy_score(y_test, y_pred_gbm)\n",
    "class_report_gbm = classification_report(y_test, y_pred_gbm)\n",
    "msqrt = np.sqrt(metrics.mean_squared_error(y_test, y_pred_gbm))\n",
    "\n",
    "print(class_report_gbm)\n",
    "print(\"Accuracy:\",accuracy_gbm)\n",
    "print(\"Mean Square Error:\", msqrt)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy test: 0.8338744588744589\n",
      "Accuracy train: 0.8346861471861472\n",
      "Mean Square Error test: 0.4075850109186317\n",
      "Mean Square Error train: 0.4065880628029465\n"
     ]
    }
   ],
   "source": [
    "# Predict on the training set and evaluate for overfitting\n",
    "y_pred_train_gbm = gbm_model.predict(X_train)\n",
    "accuracy_train_gbm = accuracy_score(y_train, y_pred_train_gbm)\n",
    "msqrt_train = np.sqrt(metrics.mean_squared_error(y_train, y_pred_train_gbm))\n",
    "\n",
    "print(\"Accuracy test:\",accuracy_gbm)\n",
    "print(\"Accuracy train:\",accuracy_train_gbm)\n",
    "print(\"Mean Square Error test:\", msqrt)\n",
    "print(\"Mean Square Error train:\", msqrt_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Hyperparameter - GRID "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 3 folds for each of 1728 candidates, totalling 5184 fits\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[1;32mc:\\Users\\Ana\\OneDrive\\Documents\\Ironhack\\Week 9\\Final Project\\Lead Score\\Notebook\\2.Model_training.ipynb Cell 35\u001b[0m line \u001b[0;36m2\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/Ana/OneDrive/Documents/Ironhack/Week%209/Final%20Project/Lead%20Score/Notebook/2.Model_training.ipynb#X55sZmlsZQ%3D%3D?line=13'>14</a>\u001b[0m grid_search \u001b[39m=\u001b[39m GridSearchCV(estimator\u001b[39m=\u001b[39mGradientBoostingClassifier(random_state\u001b[39m=\u001b[39m\u001b[39m42\u001b[39m),\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/Ana/OneDrive/Documents/Ironhack/Week%209/Final%20Project/Lead%20Score/Notebook/2.Model_training.ipynb#X55sZmlsZQ%3D%3D?line=14'>15</a>\u001b[0m                            param_grid\u001b[39m=\u001b[39mparam_grid,\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/Ana/OneDrive/Documents/Ironhack/Week%209/Final%20Project/Lead%20Score/Notebook/2.Model_training.ipynb#X55sZmlsZQ%3D%3D?line=15'>16</a>\u001b[0m                            scoring\u001b[39m=\u001b[39m\u001b[39m'\u001b[39m\u001b[39maccuracy\u001b[39m\u001b[39m'\u001b[39m,\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/Ana/OneDrive/Documents/Ironhack/Week%209/Final%20Project/Lead%20Score/Notebook/2.Model_training.ipynb#X55sZmlsZQ%3D%3D?line=16'>17</a>\u001b[0m                            cv\u001b[39m=\u001b[39m\u001b[39m3\u001b[39m,\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/Ana/OneDrive/Documents/Ironhack/Week%209/Final%20Project/Lead%20Score/Notebook/2.Model_training.ipynb#X55sZmlsZQ%3D%3D?line=17'>18</a>\u001b[0m                            verbose\u001b[39m=\u001b[39m\u001b[39m1\u001b[39m,\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/Ana/OneDrive/Documents/Ironhack/Week%209/Final%20Project/Lead%20Score/Notebook/2.Model_training.ipynb#X55sZmlsZQ%3D%3D?line=18'>19</a>\u001b[0m                            n_jobs\u001b[39m=\u001b[39m\u001b[39m-\u001b[39m\u001b[39m1\u001b[39m)\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/Ana/OneDrive/Documents/Ironhack/Week%209/Final%20Project/Lead%20Score/Notebook/2.Model_training.ipynb#X55sZmlsZQ%3D%3D?line=20'>21</a>\u001b[0m \u001b[39m# Fit to the training data\u001b[39;00m\n\u001b[1;32m---> <a href='vscode-notebook-cell:/c%3A/Users/Ana/OneDrive/Documents/Ironhack/Week%209/Final%20Project/Lead%20Score/Notebook/2.Model_training.ipynb#X55sZmlsZQ%3D%3D?line=21'>22</a>\u001b[0m grid_search\u001b[39m.\u001b[39;49mfit(X_train, y_train)\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/Ana/OneDrive/Documents/Ironhack/Week%209/Final%20Project/Lead%20Score/Notebook/2.Model_training.ipynb#X55sZmlsZQ%3D%3D?line=23'>24</a>\u001b[0m \u001b[39m# Get the best parameters and the corresponding accuracy\u001b[39;00m\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/Ana/OneDrive/Documents/Ironhack/Week%209/Final%20Project/Lead%20Score/Notebook/2.Model_training.ipynb#X55sZmlsZQ%3D%3D?line=24'>25</a>\u001b[0m best_params \u001b[39m=\u001b[39m grid_search\u001b[39m.\u001b[39mbest_params_\n",
      "File \u001b[1;32mc:\\Users\\Ana\\anaconda3\\lib\\site-packages\\sklearn\\base.py:1151\u001b[0m, in \u001b[0;36m_fit_context.<locals>.decorator.<locals>.wrapper\u001b[1;34m(estimator, *args, **kwargs)\u001b[0m\n\u001b[0;32m   1144\u001b[0m     estimator\u001b[39m.\u001b[39m_validate_params()\n\u001b[0;32m   1146\u001b[0m \u001b[39mwith\u001b[39;00m config_context(\n\u001b[0;32m   1147\u001b[0m     skip_parameter_validation\u001b[39m=\u001b[39m(\n\u001b[0;32m   1148\u001b[0m         prefer_skip_nested_validation \u001b[39mor\u001b[39;00m global_skip_validation\n\u001b[0;32m   1149\u001b[0m     )\n\u001b[0;32m   1150\u001b[0m ):\n\u001b[1;32m-> 1151\u001b[0m     \u001b[39mreturn\u001b[39;00m fit_method(estimator, \u001b[39m*\u001b[39margs, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkwargs)\n",
      "File \u001b[1;32mc:\\Users\\Ana\\anaconda3\\lib\\site-packages\\sklearn\\model_selection\\_search.py:898\u001b[0m, in \u001b[0;36mBaseSearchCV.fit\u001b[1;34m(self, X, y, groups, **fit_params)\u001b[0m\n\u001b[0;32m    892\u001b[0m     results \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_format_results(\n\u001b[0;32m    893\u001b[0m         all_candidate_params, n_splits, all_out, all_more_results\n\u001b[0;32m    894\u001b[0m     )\n\u001b[0;32m    896\u001b[0m     \u001b[39mreturn\u001b[39;00m results\n\u001b[1;32m--> 898\u001b[0m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_run_search(evaluate_candidates)\n\u001b[0;32m    900\u001b[0m \u001b[39m# multimetric is determined here because in the case of a callable\u001b[39;00m\n\u001b[0;32m    901\u001b[0m \u001b[39m# self.scoring the return type is only known after calling\u001b[39;00m\n\u001b[0;32m    902\u001b[0m first_test_score \u001b[39m=\u001b[39m all_out[\u001b[39m0\u001b[39m][\u001b[39m\"\u001b[39m\u001b[39mtest_scores\u001b[39m\u001b[39m\"\u001b[39m]\n",
      "File \u001b[1;32mc:\\Users\\Ana\\anaconda3\\lib\\site-packages\\sklearn\\model_selection\\_search.py:1419\u001b[0m, in \u001b[0;36mGridSearchCV._run_search\u001b[1;34m(self, evaluate_candidates)\u001b[0m\n\u001b[0;32m   1417\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39m_run_search\u001b[39m(\u001b[39mself\u001b[39m, evaluate_candidates):\n\u001b[0;32m   1418\u001b[0m \u001b[39m    \u001b[39m\u001b[39m\"\"\"Search all candidates in param_grid\"\"\"\u001b[39;00m\n\u001b[1;32m-> 1419\u001b[0m     evaluate_candidates(ParameterGrid(\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mparam_grid))\n",
      "File \u001b[1;32mc:\\Users\\Ana\\anaconda3\\lib\\site-packages\\sklearn\\model_selection\\_search.py:845\u001b[0m, in \u001b[0;36mBaseSearchCV.fit.<locals>.evaluate_candidates\u001b[1;34m(candidate_params, cv, more_results)\u001b[0m\n\u001b[0;32m    837\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mverbose \u001b[39m>\u001b[39m \u001b[39m0\u001b[39m:\n\u001b[0;32m    838\u001b[0m     \u001b[39mprint\u001b[39m(\n\u001b[0;32m    839\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mFitting \u001b[39m\u001b[39m{0}\u001b[39;00m\u001b[39m folds for each of \u001b[39m\u001b[39m{1}\u001b[39;00m\u001b[39m candidates,\u001b[39m\u001b[39m\"\u001b[39m\n\u001b[0;32m    840\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39m totalling \u001b[39m\u001b[39m{2}\u001b[39;00m\u001b[39m fits\u001b[39m\u001b[39m\"\u001b[39m\u001b[39m.\u001b[39mformat(\n\u001b[0;32m    841\u001b[0m             n_splits, n_candidates, n_candidates \u001b[39m*\u001b[39m n_splits\n\u001b[0;32m    842\u001b[0m         )\n\u001b[0;32m    843\u001b[0m     )\n\u001b[1;32m--> 845\u001b[0m out \u001b[39m=\u001b[39m parallel(\n\u001b[0;32m    846\u001b[0m     delayed(_fit_and_score)(\n\u001b[0;32m    847\u001b[0m         clone(base_estimator),\n\u001b[0;32m    848\u001b[0m         X,\n\u001b[0;32m    849\u001b[0m         y,\n\u001b[0;32m    850\u001b[0m         train\u001b[39m=\u001b[39;49mtrain,\n\u001b[0;32m    851\u001b[0m         test\u001b[39m=\u001b[39;49mtest,\n\u001b[0;32m    852\u001b[0m         parameters\u001b[39m=\u001b[39;49mparameters,\n\u001b[0;32m    853\u001b[0m         split_progress\u001b[39m=\u001b[39;49m(split_idx, n_splits),\n\u001b[0;32m    854\u001b[0m         candidate_progress\u001b[39m=\u001b[39;49m(cand_idx, n_candidates),\n\u001b[0;32m    855\u001b[0m         \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mfit_and_score_kwargs,\n\u001b[0;32m    856\u001b[0m     )\n\u001b[0;32m    857\u001b[0m     \u001b[39mfor\u001b[39;49;00m (cand_idx, parameters), (split_idx, (train, test)) \u001b[39min\u001b[39;49;00m product(\n\u001b[0;32m    858\u001b[0m         \u001b[39menumerate\u001b[39;49m(candidate_params), \u001b[39menumerate\u001b[39;49m(cv\u001b[39m.\u001b[39;49msplit(X, y, groups))\n\u001b[0;32m    859\u001b[0m     )\n\u001b[0;32m    860\u001b[0m )\n\u001b[0;32m    862\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mlen\u001b[39m(out) \u001b[39m<\u001b[39m \u001b[39m1\u001b[39m:\n\u001b[0;32m    863\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mValueError\u001b[39;00m(\n\u001b[0;32m    864\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mNo fits were performed. \u001b[39m\u001b[39m\"\u001b[39m\n\u001b[0;32m    865\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mWas the CV iterator empty? \u001b[39m\u001b[39m\"\u001b[39m\n\u001b[0;32m    866\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mWere there no candidates?\u001b[39m\u001b[39m\"\u001b[39m\n\u001b[0;32m    867\u001b[0m     )\n",
      "File \u001b[1;32mc:\\Users\\Ana\\anaconda3\\lib\\site-packages\\sklearn\\utils\\parallel.py:65\u001b[0m, in \u001b[0;36mParallel.__call__\u001b[1;34m(self, iterable)\u001b[0m\n\u001b[0;32m     60\u001b[0m config \u001b[39m=\u001b[39m get_config()\n\u001b[0;32m     61\u001b[0m iterable_with_config \u001b[39m=\u001b[39m (\n\u001b[0;32m     62\u001b[0m     (_with_config(delayed_func, config), args, kwargs)\n\u001b[0;32m     63\u001b[0m     \u001b[39mfor\u001b[39;00m delayed_func, args, kwargs \u001b[39min\u001b[39;00m iterable\n\u001b[0;32m     64\u001b[0m )\n\u001b[1;32m---> 65\u001b[0m \u001b[39mreturn\u001b[39;00m \u001b[39msuper\u001b[39;49m()\u001b[39m.\u001b[39;49m\u001b[39m__call__\u001b[39;49m(iterable_with_config)\n",
      "File \u001b[1;32mc:\\Users\\Ana\\anaconda3\\lib\\site-packages\\joblib\\parallel.py:1061\u001b[0m, in \u001b[0;36mParallel.__call__\u001b[1;34m(self, iterable)\u001b[0m\n\u001b[0;32m   1058\u001b[0m     \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_iterating \u001b[39m=\u001b[39m \u001b[39mFalse\u001b[39;00m\n\u001b[0;32m   1060\u001b[0m \u001b[39mwith\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_backend\u001b[39m.\u001b[39mretrieval_context():\n\u001b[1;32m-> 1061\u001b[0m     \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mretrieve()\n\u001b[0;32m   1062\u001b[0m \u001b[39m# Make sure that we get a last message telling us we are done\u001b[39;00m\n\u001b[0;32m   1063\u001b[0m elapsed_time \u001b[39m=\u001b[39m time\u001b[39m.\u001b[39mtime() \u001b[39m-\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_start_time\n",
      "File \u001b[1;32mc:\\Users\\Ana\\anaconda3\\lib\\site-packages\\joblib\\parallel.py:938\u001b[0m, in \u001b[0;36mParallel.retrieve\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m    936\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[0;32m    937\u001b[0m     \u001b[39mif\u001b[39;00m \u001b[39mgetattr\u001b[39m(\u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_backend, \u001b[39m'\u001b[39m\u001b[39msupports_timeout\u001b[39m\u001b[39m'\u001b[39m, \u001b[39mFalse\u001b[39;00m):\n\u001b[1;32m--> 938\u001b[0m         \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_output\u001b[39m.\u001b[39mextend(job\u001b[39m.\u001b[39;49mget(timeout\u001b[39m=\u001b[39;49m\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mtimeout))\n\u001b[0;32m    939\u001b[0m     \u001b[39melse\u001b[39;00m:\n\u001b[0;32m    940\u001b[0m         \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_output\u001b[39m.\u001b[39mextend(job\u001b[39m.\u001b[39mget())\n",
      "File \u001b[1;32mc:\\Users\\Ana\\anaconda3\\lib\\site-packages\\joblib\\_parallel_backends.py:542\u001b[0m, in \u001b[0;36mLokyBackend.wrap_future_result\u001b[1;34m(future, timeout)\u001b[0m\n\u001b[0;32m    539\u001b[0m \u001b[39m\u001b[39m\u001b[39m\"\"\"Wrapper for Future.result to implement the same behaviour as\u001b[39;00m\n\u001b[0;32m    540\u001b[0m \u001b[39mAsyncResults.get from multiprocessing.\"\"\"\u001b[39;00m\n\u001b[0;32m    541\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[1;32m--> 542\u001b[0m     \u001b[39mreturn\u001b[39;00m future\u001b[39m.\u001b[39;49mresult(timeout\u001b[39m=\u001b[39;49mtimeout)\n\u001b[0;32m    543\u001b[0m \u001b[39mexcept\u001b[39;00m CfTimeoutError \u001b[39mas\u001b[39;00m e:\n\u001b[0;32m    544\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mTimeoutError\u001b[39;00m \u001b[39mfrom\u001b[39;00m \u001b[39me\u001b[39;00m\n",
      "File \u001b[1;32mc:\\Users\\Ana\\anaconda3\\lib\\concurrent\\futures\\_base.py:453\u001b[0m, in \u001b[0;36mFuture.result\u001b[1;34m(self, timeout)\u001b[0m\n\u001b[0;32m    450\u001b[0m \u001b[39melif\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_state \u001b[39m==\u001b[39m FINISHED:\n\u001b[0;32m    451\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m__get_result()\n\u001b[1;32m--> 453\u001b[0m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_condition\u001b[39m.\u001b[39;49mwait(timeout)\n\u001b[0;32m    455\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_state \u001b[39min\u001b[39;00m [CANCELLED, CANCELLED_AND_NOTIFIED]:\n\u001b[0;32m    456\u001b[0m     \u001b[39mraise\u001b[39;00m CancelledError()\n",
      "File \u001b[1;32mc:\\Users\\Ana\\anaconda3\\lib\\threading.py:320\u001b[0m, in \u001b[0;36mCondition.wait\u001b[1;34m(self, timeout)\u001b[0m\n\u001b[0;32m    318\u001b[0m \u001b[39mtry\u001b[39;00m:    \u001b[39m# restore state no matter what (e.g., KeyboardInterrupt)\u001b[39;00m\n\u001b[0;32m    319\u001b[0m     \u001b[39mif\u001b[39;00m timeout \u001b[39mis\u001b[39;00m \u001b[39mNone\u001b[39;00m:\n\u001b[1;32m--> 320\u001b[0m         waiter\u001b[39m.\u001b[39;49macquire()\n\u001b[0;32m    321\u001b[0m         gotit \u001b[39m=\u001b[39m \u001b[39mTrue\u001b[39;00m\n\u001b[0;32m    322\u001b[0m     \u001b[39melse\u001b[39;00m:\n",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "# Define the parameter grid\n",
    "param_grid = {\n",
    "    'n_estimators': [100, 300, 500, 1000],\n",
    "    'learning_rate': [0.01, 0.1, 0.5, 1.0],\n",
    "    'max_depth': [3, 5, 9, 15],\n",
    "    'min_samples_split': [2, 4,8],\n",
    "    'min_samples_leaf': [1, 2, 4],\n",
    "    'subsample': [0.8, 1.0, 1.2]\n",
    "}\n",
    "\n",
    "# Initialize the GridSearchCV object\n",
    "grid_search = GridSearchCV(estimator=GradientBoostingClassifier(random_state=42),\n",
    "                           param_grid=param_grid,\n",
    "                           scoring='accuracy',\n",
    "                           cv=3,\n",
    "                           verbose=1,\n",
    "                           n_jobs=-1)\n",
    "\n",
    "# Fit to the training data\n",
    "grid_search.fit(X_train, y_train)\n",
    "\n",
    "# Get the best parameters and the corresponding accuracy\n",
    "best_params = grid_search.best_params_\n",
    "best_accuracy = grid_search.best_score_\n",
    "\n",
    "best_params, best_accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.85      0.87      0.86      1107\n",
      "           1       0.80      0.77      0.78       741\n",
      "\n",
      "    accuracy                           0.83      1848\n",
      "   macro avg       0.82      0.82      0.82      1848\n",
      "weighted avg       0.83      0.83      0.83      1848\n",
      "\n",
      "Accuracy: 0.829004329004329\n",
      "Mean Square Error: 0.4075850109186317\n"
     ]
    }
   ],
   "source": [
    "best_gbm_model = GradientBoostingClassifier(learning_rate=0.1, max_depth=3, min_samples_leaf=2,\n",
    "                                            min_samples_split=2, n_estimators=300, subsample=1.0, random_state=100)\n",
    "\n",
    "# Train the model using the training data\n",
    "best_gbm_model.fit(X_train, y_train)\n",
    "\n",
    "# Predict on the test set and evaluate\n",
    "y_pred_best_gbm = best_gbm_model.predict(X_test)\n",
    "accuracy_best_gbm = accuracy_score(y_test, y_pred_best_gbm)\n",
    "class_report_best_gbm = classification_report(y_test, y_pred_best_gbm)\n",
    "\n",
    "\n",
    "print(class_report_best_gbm)\n",
    "print(\"Accuracy:\",accuracy_best_gbm)\n",
    "print(\"Mean Square Error:\", msqrt)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Add a column to my dataset with prababilities of converting or not converting "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Predicted Probabilities:\n",
      "['0.81', '0.19']\n",
      "['0.90', '0.10']\n",
      "['0.99', '0.01']\n",
      "['0.91', '0.09']\n",
      "['0.87', '0.13']\n",
      "['0.97', '0.03']\n",
      "['0.00', '1.00']\n",
      "['0.90', '0.10']\n",
      "['0.79', '0.21']\n",
      "['0.02', '0.98']\n",
      "['0.18', '0.82']\n",
      "['0.79', '0.21']\n",
      "['0.36', '0.64']\n",
      "['0.92', '0.08']\n",
      "['0.84', '0.16']\n",
      "['0.40', '0.60']\n",
      "['0.03', '0.97']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.95', '0.05']\n",
      "['0.06', '0.94']\n",
      "['0.80', '0.20']\n",
      "['0.80', '0.20']\n",
      "['0.34', '0.66']\n",
      "['0.12', '0.88']\n",
      "['0.96', '0.04']\n",
      "['0.15', '0.85']\n",
      "['0.94', '0.06']\n",
      "['0.54', '0.46']\n",
      "['0.87', '0.13']\n",
      "['0.96', '0.04']\n",
      "['0.02', '0.98']\n",
      "['0.99', '0.01']\n",
      "['0.86', '0.14']\n",
      "['0.93', '0.07']\n",
      "['0.10', '0.90']\n",
      "['0.28', '0.72']\n",
      "['0.79', '0.21']\n",
      "['0.96', '0.04']\n",
      "['0.59', '0.41']\n",
      "['0.42', '0.58']\n",
      "['0.30', '0.70']\n",
      "['0.83', '0.17']\n",
      "['0.87', '0.13']\n",
      "['0.96', '0.04']\n",
      "['0.24', '0.76']\n",
      "['0.03', '0.97']\n",
      "['0.20', '0.80']\n",
      "['0.96', '0.04']\n",
      "['0.07', '0.93']\n",
      "['0.20', '0.80']\n",
      "['0.70', '0.30']\n",
      "['0.80', '0.20']\n",
      "['0.04', '0.96']\n",
      "['0.98', '0.02']\n",
      "['0.98', '0.02']\n",
      "['0.50', '0.50']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.77', '0.23']\n",
      "['0.26', '0.74']\n",
      "['0.44', '0.56']\n",
      "['0.97', '0.03']\n",
      "['0.90', '0.10']\n",
      "['0.52', '0.48']\n",
      "['0.20', '0.80']\n",
      "['0.80', '0.20']\n",
      "['0.87', '0.13']\n",
      "['0.05', '0.95']\n",
      "['0.45', '0.55']\n",
      "['0.92', '0.08']\n",
      "['0.80', '0.20']\n",
      "['0.94', '0.06']\n",
      "['0.93', '0.07']\n",
      "['0.01', '0.99']\n",
      "['0.98', '0.02']\n",
      "['0.95', '0.05']\n",
      "['0.89', '0.11']\n",
      "['0.46', '0.54']\n",
      "['0.05', '0.95']\n",
      "['0.88', '0.12']\n",
      "['0.89', '0.11']\n",
      "['0.99', '0.01']\n",
      "['0.90', '0.10']\n",
      "['0.94', '0.06']\n",
      "['0.95', '0.05']\n",
      "['0.30', '0.70']\n",
      "['0.22', '0.78']\n",
      "['0.87', '0.13']\n",
      "['0.73', '0.27']\n",
      "['0.96', '0.04']\n",
      "['0.79', '0.21']\n",
      "['0.82', '0.18']\n",
      "['0.37', '0.63']\n",
      "['0.91', '0.09']\n",
      "['0.96', '0.04']\n",
      "['0.36', '0.64']\n",
      "['0.96', '0.04']\n",
      "['0.93', '0.07']\n",
      "['0.08', '0.92']\n",
      "['0.94', '0.06']\n",
      "['0.26', '0.74']\n",
      "['0.56', '0.44']\n",
      "['0.96', '0.04']\n",
      "['0.03', '0.97']\n",
      "['0.94', '0.06']\n",
      "['0.16', '0.84']\n",
      "['0.06', '0.94']\n",
      "['0.98', '0.02']\n",
      "['0.97', '0.03']\n",
      "['0.96', '0.04']\n",
      "['0.66', '0.34']\n",
      "['0.98', '0.02']\n",
      "['0.39', '0.61']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.83', '0.17']\n",
      "['0.73', '0.27']\n",
      "['0.91', '0.09']\n",
      "['0.02', '0.98']\n",
      "['0.91', '0.09']\n",
      "['0.86', '0.14']\n",
      "['0.10', '0.90']\n",
      "['0.92', '0.08']\n",
      "['0.98', '0.02']\n",
      "['0.97', '0.03']\n",
      "['0.99', '0.01']\n",
      "['0.12', '0.88']\n",
      "['0.95', '0.05']\n",
      "['0.95', '0.05']\n",
      "['0.81', '0.19']\n",
      "['0.75', '0.25']\n",
      "['0.78', '0.22']\n",
      "['0.01', '0.99']\n",
      "['0.98', '0.02']\n",
      "['0.04', '0.96']\n",
      "['0.88', '0.12']\n",
      "['0.91', '0.09']\n",
      "['0.93', '0.07']\n",
      "['0.94', '0.06']\n",
      "['0.94', '0.06']\n",
      "['0.15', '0.85']\n",
      "['0.94', '0.06']\n",
      "['0.96', '0.04']\n",
      "['0.12', '0.88']\n",
      "['0.48', '0.52']\n",
      "['0.77', '0.23']\n",
      "['0.65', '0.35']\n",
      "['0.93', '0.07']\n",
      "['0.72', '0.28']\n",
      "['0.98', '0.02']\n",
      "['0.89', '0.11']\n",
      "['0.53', '0.47']\n",
      "['0.50', '0.50']\n",
      "['0.96', '0.04']\n",
      "['0.06', '0.94']\n",
      "['0.44', '0.56']\n",
      "['0.94', '0.06']\n",
      "['0.14', '0.86']\n",
      "['0.31', '0.69']\n",
      "['0.96', '0.04']\n",
      "['0.51', '0.49']\n",
      "['0.98', '0.02']\n",
      "['0.92', '0.08']\n",
      "['0.44', '0.56']\n",
      "['0.80', '0.20']\n",
      "['0.92', '0.08']\n",
      "['0.26', '0.74']\n",
      "['0.33', '0.67']\n",
      "['0.04', '0.96']\n",
      "['0.94', '0.06']\n",
      "['0.24', '0.76']\n",
      "['0.93', '0.07']\n",
      "['0.21', '0.79']\n",
      "['0.40', '0.60']\n",
      "['0.00', '1.00']\n",
      "['0.92', '0.08']\n",
      "['0.30', '0.70']\n",
      "['0.23', '0.77']\n",
      "['0.93', '0.07']\n",
      "['0.01', '0.99']\n",
      "['0.17', '0.83']\n",
      "['0.96', '0.04']\n",
      "['0.04', '0.96']\n",
      "['0.94', '0.06']\n",
      "['0.17', '0.83']\n",
      "['0.55', '0.45']\n",
      "['0.25', '0.75']\n",
      "['0.08', '0.92']\n",
      "['0.74', '0.26']\n",
      "['0.44', '0.56']\n",
      "['0.94', '0.06']\n",
      "['0.93', '0.07']\n",
      "['0.97', '0.03']\n",
      "['0.60', '0.40']\n",
      "['0.29', '0.71']\n",
      "['0.01', '0.99']\n",
      "['0.94', '0.06']\n",
      "['0.39', '0.61']\n",
      "['0.36', '0.64']\n",
      "['0.36', '0.64']\n",
      "['0.09', '0.91']\n",
      "['0.80', '0.20']\n",
      "['0.08', '0.92']\n",
      "['0.69', '0.31']\n",
      "['0.81', '0.19']\n",
      "['0.68', '0.32']\n",
      "['0.09', '0.91']\n",
      "['0.41', '0.59']\n",
      "['0.36', '0.64']\n",
      "['0.87', '0.13']\n",
      "['0.02', '0.98']\n",
      "['0.75', '0.25']\n",
      "['0.64', '0.36']\n",
      "['0.17', '0.83']\n",
      "['0.44', '0.56']\n",
      "['0.31', '0.69']\n",
      "['0.03', '0.97']\n",
      "['0.10', '0.90']\n",
      "['0.91', '0.09']\n",
      "['0.94', '0.06']\n",
      "['0.70', '0.30']\n",
      "['0.48', '0.52']\n",
      "['0.50', '0.50']\n",
      "['0.96', '0.04']\n",
      "['0.80', '0.20']\n",
      "['0.19', '0.81']\n",
      "['0.49', '0.51']\n",
      "['0.67', '0.33']\n",
      "['0.49', '0.51']\n",
      "['0.91', '0.09']\n",
      "['0.84', '0.16']\n",
      "['0.73', '0.27']\n",
      "['0.91', '0.09']\n",
      "['0.09', '0.91']\n",
      "['0.90', '0.10']\n",
      "['0.64', '0.36']\n",
      "['0.96', '0.04']\n",
      "['0.03', '0.97']\n",
      "['0.32', '0.68']\n",
      "['0.55', '0.45']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.17', '0.83']\n",
      "['0.62', '0.38']\n",
      "['0.80', '0.20']\n",
      "['0.90', '0.10']\n",
      "['0.75', '0.25']\n",
      "['0.74', '0.26']\n",
      "['0.85', '0.15']\n",
      "['0.96', '0.04']\n",
      "['0.17', '0.83']\n",
      "['0.75', '0.25']\n",
      "['0.05', '0.95']\n",
      "['0.03', '0.97']\n",
      "['0.38', '0.62']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.12', '0.88']\n",
      "['0.80', '0.20']\n",
      "['0.68', '0.32']\n",
      "['0.77', '0.23']\n",
      "['0.85', '0.15']\n",
      "['0.22', '0.78']\n",
      "['0.24', '0.76']\n",
      "['0.43', '0.57']\n",
      "['0.56', '0.44']\n",
      "['0.91', '0.09']\n",
      "['0.79', '0.21']\n",
      "['0.94', '0.06']\n",
      "['0.14', '0.86']\n",
      "['0.64', '0.36']\n",
      "['0.76', '0.24']\n",
      "['0.81', '0.19']\n",
      "['0.95', '0.05']\n",
      "['0.95', '0.05']\n",
      "['0.90', '0.10']\n",
      "['0.18', '0.82']\n",
      "['0.80', '0.20']\n",
      "['0.36', '0.64']\n",
      "['0.95', '0.05']\n",
      "['0.92', '0.08']\n",
      "['0.96', '0.04']\n",
      "['0.20', '0.80']\n",
      "['0.96', '0.04']\n",
      "['0.97', '0.03']\n",
      "['0.07', '0.93']\n",
      "['0.97', '0.03']\n",
      "['0.26', '0.74']\n",
      "['0.35', '0.65']\n",
      "['0.91', '0.09']\n",
      "['0.95', '0.05']\n",
      "['0.17', '0.83']\n",
      "['0.74', '0.26']\n",
      "['0.94', '0.06']\n",
      "['0.91', '0.09']\n",
      "['0.92', '0.08']\n",
      "['0.08', '0.92']\n",
      "['0.83', '0.17']\n",
      "['0.02', '0.98']\n",
      "['0.68', '0.32']\n",
      "['0.85', '0.15']\n",
      "['0.96', '0.04']\n",
      "['0.55', '0.45']\n",
      "['0.76', '0.24']\n",
      "['0.20', '0.80']\n",
      "['0.62', '0.38']\n",
      "['0.92', '0.08']\n",
      "['0.66', '0.34']\n",
      "['0.79', '0.21']\n",
      "['0.96', '0.04']\n",
      "['0.99', '0.01']\n",
      "['0.53', '0.47']\n",
      "['0.72', '0.28']\n",
      "['0.18', '0.82']\n",
      "['0.79', '0.21']\n",
      "['0.23', '0.77']\n",
      "['0.97', '0.03']\n",
      "['0.94', '0.06']\n",
      "['0.98', '0.02']\n",
      "['0.59', '0.41']\n",
      "['0.94', '0.06']\n",
      "['0.96', '0.04']\n",
      "['0.04', '0.96']\n",
      "['0.62', '0.38']\n",
      "['0.89', '0.11']\n",
      "['0.95', '0.05']\n",
      "['0.76', '0.24']\n",
      "['0.70', '0.30']\n",
      "['0.90', '0.10']\n",
      "['0.01', '0.99']\n",
      "['0.49', '0.51']\n",
      "['0.06', '0.94']\n",
      "['0.80', '0.20']\n",
      "['0.93', '0.07']\n",
      "['0.12', '0.88']\n",
      "['0.95', '0.05']\n",
      "['0.85', '0.15']\n",
      "['0.19', '0.81']\n",
      "['0.91', '0.09']\n",
      "['0.42', '0.58']\n",
      "['0.97', '0.03']\n",
      "['0.96', '0.04']\n",
      "['0.10', '0.90']\n",
      "['0.91', '0.09']\n",
      "['0.98', '0.02']\n",
      "['0.94', '0.06']\n",
      "['0.98', '0.02']\n",
      "['0.71', '0.29']\n",
      "['0.02', '0.98']\n",
      "['0.22', '0.78']\n",
      "['0.28', '0.72']\n",
      "['0.17', '0.83']\n",
      "['0.94', '0.06']\n",
      "['0.13', '0.87']\n",
      "['0.80', '0.20']\n",
      "['0.95', '0.05']\n",
      "['0.17', '0.83']\n",
      "['0.04', '0.96']\n",
      "['0.84', '0.16']\n",
      "['0.73', '0.27']\n",
      "['0.16', '0.84']\n",
      "['0.18', '0.82']\n",
      "['0.51', '0.49']\n",
      "['0.01', '0.99']\n",
      "['0.96', '0.04']\n",
      "['0.92', '0.08']\n",
      "['0.91', '0.09']\n",
      "['0.96', '0.04']\n",
      "['0.80', '0.20']\n",
      "['0.96', '0.04']\n",
      "['0.92', '0.08']\n",
      "['0.33', '0.67']\n",
      "['0.17', '0.83']\n",
      "['0.40', '0.60']\n",
      "['0.86', '0.14']\n",
      "['0.80', '0.20']\n",
      "['0.41', '0.59']\n",
      "['0.85', '0.15']\n",
      "['0.81', '0.19']\n",
      "['0.18', '0.82']\n",
      "['0.89', '0.11']\n",
      "['0.96', '0.04']\n",
      "['0.52', '0.48']\n",
      "['0.04', '0.96']\n",
      "['0.92', '0.08']\n",
      "['0.79', '0.21']\n",
      "['0.91', '0.09']\n",
      "['0.95', '0.05']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.20', '0.80']\n",
      "['0.96', '0.04']\n",
      "['0.87', '0.13']\n",
      "['0.36', '0.64']\n",
      "['0.19', '0.81']\n",
      "['0.89', '0.11']\n",
      "['0.14', '0.86']\n",
      "['0.80', '0.20']\n",
      "['0.39', '0.61']\n",
      "['0.95', '0.05']\n",
      "['0.80', '0.20']\n",
      "['0.38', '0.62']\n",
      "['0.10', '0.90']\n",
      "['0.58', '0.42']\n",
      "['0.36', '0.64']\n",
      "['0.26', '0.74']\n",
      "['0.54', '0.46']\n",
      "['0.41', '0.59']\n",
      "['0.94', '0.06']\n",
      "['0.73', '0.27']\n",
      "['0.67', '0.33']\n",
      "['0.39', '0.61']\n",
      "['0.84', '0.16']\n",
      "['0.90', '0.10']\n",
      "['0.92', '0.08']\n",
      "['0.36', '0.64']\n",
      "['0.94', '0.06']\n",
      "['0.80', '0.20']\n",
      "['0.87', '0.13']\n",
      "['0.16', '0.84']\n",
      "['0.02', '0.98']\n",
      "['0.84', '0.16']\n",
      "['0.03', '0.97']\n",
      "['0.03', '0.97']\n",
      "['0.17', '0.83']\n",
      "['0.21', '0.79']\n",
      "['0.94', '0.06']\n",
      "['0.91', '0.09']\n",
      "['0.84', '0.16']\n",
      "['0.27', '0.73']\n",
      "['0.17', '0.83']\n",
      "['0.24', '0.76']\n",
      "['0.15', '0.85']\n",
      "['0.80', '0.20']\n",
      "['0.30', '0.70']\n",
      "['0.88', '0.12']\n",
      "['0.64', '0.36']\n",
      "['0.90', '0.10']\n",
      "['0.37', '0.63']\n",
      "['0.89', '0.11']\n",
      "['0.75', '0.25']\n",
      "['0.90', '0.10']\n",
      "['0.80', '0.20']\n",
      "['0.75', '0.25']\n",
      "['0.38', '0.62']\n",
      "['0.91', '0.09']\n",
      "['0.05', '0.95']\n",
      "['0.36', '0.64']\n",
      "['0.49', '0.51']\n",
      "['0.30', '0.70']\n",
      "['0.04', '0.96']\n",
      "['0.84', '0.16']\n",
      "['0.92', '0.08']\n",
      "['0.72', '0.28']\n",
      "['0.80', '0.20']\n",
      "['0.44', '0.56']\n",
      "['0.95', '0.05']\n",
      "['0.58', '0.42']\n",
      "['0.48', '0.52']\n",
      "['0.79', '0.21']\n",
      "['0.20', '0.80']\n",
      "['0.88', '0.12']\n",
      "['0.04', '0.96']\n",
      "['0.80', '0.20']\n",
      "['0.38', '0.62']\n",
      "['0.35', '0.65']\n",
      "['0.94', '0.06']\n",
      "['0.96', '0.04']\n",
      "['0.01', '0.99']\n",
      "['0.45', '0.55']\n",
      "['0.29', '0.71']\n",
      "['0.18', '0.82']\n",
      "['0.96', '0.04']\n",
      "['0.91', '0.09']\n",
      "['0.98', '0.02']\n",
      "['0.80', '0.20']\n",
      "['0.01', '0.99']\n",
      "['0.96', '0.04']\n",
      "['0.28', '0.72']\n",
      "['0.95', '0.05']\n",
      "['0.61', '0.39']\n",
      "['0.16', '0.84']\n",
      "['0.89', '0.11']\n",
      "['0.94', '0.06']\n",
      "['0.20', '0.80']\n",
      "['0.39', '0.61']\n",
      "['0.80', '0.20']\n",
      "['0.80', '0.20']\n",
      "['0.96', '0.04']\n",
      "['0.07', '0.93']\n",
      "['0.96', '0.04']\n",
      "['0.15', '0.85']\n",
      "['0.03', '0.97']\n",
      "['0.22', '0.78']\n",
      "['0.21', '0.79']\n",
      "['0.97', '0.03']\n",
      "['0.96', '0.04']\n",
      "['0.77', '0.23']\n",
      "['0.80', '0.20']\n",
      "['0.15', '0.85']\n",
      "['0.02', '0.98']\n",
      "['0.88', '0.12']\n",
      "['0.46', '0.54']\n",
      "['0.72', '0.28']\n",
      "['0.93', '0.07']\n",
      "['0.96', '0.04']\n",
      "['0.91', '0.09']\n",
      "['0.37', '0.63']\n",
      "['0.95', '0.05']\n",
      "['0.96', '0.04']\n",
      "['0.86', '0.14']\n",
      "['0.77', '0.23']\n",
      "['0.79', '0.21']\n",
      "['0.96', '0.04']\n",
      "['0.02', '0.98']\n",
      "['0.16', '0.84']\n",
      "['0.98', '0.02']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.84', '0.16']\n",
      "['0.67', '0.33']\n",
      "['0.84', '0.16']\n",
      "['0.91', '0.09']\n",
      "['0.23', '0.77']\n",
      "['0.56', '0.44']\n",
      "['0.87', '0.13']\n",
      "['0.95', '0.05']\n",
      "['0.91', '0.09']\n",
      "['0.63', '0.37']\n",
      "['0.99', '0.01']\n",
      "['0.21', '0.79']\n",
      "['0.82', '0.18']\n",
      "['0.53', '0.47']\n",
      "['0.29', '0.71']\n",
      "['0.89', '0.11']\n",
      "['0.88', '0.12']\n",
      "['0.97', '0.03']\n",
      "['0.64', '0.36']\n",
      "['0.95', '0.05']\n",
      "['0.64', '0.36']\n",
      "['0.90', '0.10']\n",
      "['0.47', '0.53']\n",
      "['0.96', '0.04']\n",
      "['0.98', '0.02']\n",
      "['0.08', '0.92']\n",
      "['0.80', '0.20']\n",
      "['0.91', '0.09']\n",
      "['0.24', '0.76']\n",
      "['0.29', '0.71']\n",
      "['0.12', '0.88']\n",
      "['0.95', '0.05']\n",
      "['0.96', '0.04']\n",
      "['0.11', '0.89']\n",
      "['0.93', '0.07']\n",
      "['0.93', '0.07']\n",
      "['0.97', '0.03']\n",
      "['0.97', '0.03']\n",
      "['0.96', '0.04']\n",
      "['0.36', '0.64']\n",
      "['0.06', '0.94']\n",
      "['0.97', '0.03']\n",
      "['0.04', '0.96']\n",
      "['0.09', '0.91']\n",
      "['0.96', '0.04']\n",
      "['0.88', '0.12']\n",
      "['0.02', '0.98']\n",
      "['0.80', '0.20']\n",
      "['0.07', '0.93']\n",
      "['0.88', '0.12']\n",
      "['0.98', '0.02']\n",
      "['0.26', '0.74']\n",
      "['0.77', '0.23']\n",
      "['0.96', '0.04']\n",
      "['0.90', '0.10']\n",
      "['0.22', '0.78']\n",
      "['0.98', '0.02']\n",
      "['0.36', '0.64']\n",
      "['0.80', '0.20']\n",
      "['0.96', '0.04']\n",
      "['0.89', '0.11']\n",
      "['0.61', '0.39']\n",
      "['0.95', '0.05']\n",
      "['0.36', '0.64']\n",
      "['0.16', '0.84']\n",
      "['0.96', '0.04']\n",
      "['0.91', '0.09']\n",
      "['0.23', '0.77']\n",
      "['0.42', '0.58']\n",
      "['0.48', '0.52']\n",
      "['0.80', '0.20']\n",
      "['0.36', '0.64']\n",
      "['0.94', '0.06']\n",
      "['0.02', '0.98']\n",
      "['0.13', '0.87']\n",
      "['0.20', '0.80']\n",
      "['0.90', '0.10']\n",
      "['0.80', '0.20']\n",
      "['0.36', '0.64']\n",
      "['0.04', '0.96']\n",
      "['0.30', '0.70']\n",
      "['0.96', '0.04']\n",
      "['0.85', '0.15']\n",
      "['0.85', '0.15']\n",
      "['0.18', '0.82']\n",
      "['0.05', '0.95']\n",
      "['0.97', '0.03']\n",
      "['0.80', '0.20']\n",
      "['0.24', '0.76']\n",
      "['0.70', '0.30']\n",
      "['0.14', '0.86']\n",
      "['0.92', '0.08']\n",
      "['0.88', '0.12']\n",
      "['0.30', '0.70']\n",
      "['0.26', '0.74']\n",
      "['0.99', '0.01']\n",
      "['0.35', '0.65']\n",
      "['0.94', '0.06']\n",
      "['0.59', '0.41']\n",
      "['0.92', '0.08']\n",
      "['0.73', '0.27']\n",
      "['0.93', '0.07']\n",
      "['0.02', '0.98']\n",
      "['0.67', '0.33']\n",
      "['0.36', '0.64']\n",
      "['0.01', '0.99']\n",
      "['0.87', '0.13']\n",
      "['0.15', '0.85']\n",
      "['0.39', '0.61']\n",
      "['0.41', '0.59']\n",
      "['0.80', '0.20']\n",
      "['0.96', '0.04']\n",
      "['0.16', '0.84']\n",
      "['0.93', '0.07']\n",
      "['0.92', '0.08']\n",
      "['0.03', '0.97']\n",
      "['0.02', '0.98']\n",
      "['0.21', '0.79']\n",
      "['0.91', '0.09']\n",
      "['0.08', '0.92']\n",
      "['0.03', '0.97']\n",
      "['0.76', '0.24']\n",
      "['0.80', '0.20']\n",
      "['0.80', '0.20']\n",
      "['0.01', '0.99']\n",
      "['0.96', '0.04']\n",
      "['0.95', '0.05']\n",
      "['0.02', '0.98']\n",
      "['0.92', '0.08']\n",
      "['0.34', '0.66']\n",
      "['0.04', '0.96']\n",
      "['0.54', '0.46']\n",
      "['0.08', '0.92']\n",
      "['0.96', '0.04']\n",
      "['0.15', '0.85']\n",
      "['0.36', '0.64']\n",
      "['0.96', '0.04']\n",
      "['0.49', '0.51']\n",
      "['0.69', '0.31']\n",
      "['0.19', '0.81']\n",
      "['0.94', '0.06']\n",
      "['0.97', '0.03']\n",
      "['0.85', '0.15']\n",
      "['0.14', '0.86']\n",
      "['0.20', '0.80']\n",
      "['0.37', '0.63']\n",
      "['0.63', '0.37']\n",
      "['0.36', '0.64']\n",
      "['0.20', '0.80']\n",
      "['0.39', '0.61']\n",
      "['0.92', '0.08']\n",
      "['0.97', '0.03']\n",
      "['0.04', '0.96']\n",
      "['0.85', '0.15']\n",
      "['0.45', '0.55']\n",
      "['0.95', '0.05']\n",
      "['0.86', '0.14']\n",
      "['0.99', '0.01']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.02', '0.98']\n",
      "['0.44', '0.56']\n",
      "['0.45', '0.55']\n",
      "['0.46', '0.54']\n",
      "['0.15', '0.85']\n",
      "['0.57', '0.43']\n",
      "['0.36', '0.64']\n",
      "['0.96', '0.04']\n",
      "['0.36', '0.64']\n",
      "['0.36', '0.64']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.42', '0.58']\n",
      "['0.11', '0.89']\n",
      "['0.93', '0.07']\n",
      "['0.83', '0.17']\n",
      "['0.91', '0.09']\n",
      "['0.88', '0.12']\n",
      "['0.82', '0.18']\n",
      "['0.97', '0.03']\n",
      "['0.56', '0.44']\n",
      "['0.84', '0.16']\n",
      "['0.80', '0.20']\n",
      "['0.73', '0.27']\n",
      "['0.08', '0.92']\n",
      "['0.96', '0.04']\n",
      "['0.06', '0.94']\n",
      "['0.98', '0.02']\n",
      "['0.01', '0.99']\n",
      "['0.96', '0.04']\n",
      "['0.36', '0.64']\n",
      "['0.34', '0.66']\n",
      "['0.98', '0.02']\n",
      "['0.97', '0.03']\n",
      "['0.17', '0.83']\n",
      "['0.56', '0.44']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.80', '0.20']\n",
      "['0.98', '0.02']\n",
      "['0.89', '0.11']\n",
      "['0.29', '0.71']\n",
      "['0.93', '0.07']\n",
      "['0.29', '0.71']\n",
      "['0.14', '0.86']\n",
      "['0.39', '0.61']\n",
      "['0.24', '0.76']\n",
      "['0.75', '0.25']\n",
      "['0.88', '0.12']\n",
      "['0.94', '0.06']\n",
      "['0.76', '0.24']\n",
      "['0.98', '0.02']\n",
      "['0.91', '0.09']\n",
      "['0.86', '0.14']\n",
      "['0.34', '0.66']\n",
      "['0.68', '0.32']\n",
      "['0.91', '0.09']\n",
      "['0.62', '0.38']\n",
      "['0.94', '0.06']\n",
      "['0.11', '0.89']\n",
      "['0.43', '0.57']\n",
      "['0.91', '0.09']\n",
      "['0.96', '0.04']\n",
      "['0.98', '0.02']\n",
      "['0.34', '0.66']\n",
      "['0.40', '0.60']\n",
      "['0.93', '0.07']\n",
      "['0.80', '0.20']\n",
      "['0.79', '0.21']\n",
      "['0.79', '0.21']\n",
      "['0.80', '0.20']\n",
      "['0.96', '0.04']\n",
      "['0.02', '0.98']\n",
      "['0.74', '0.26']\n",
      "['0.74', '0.26']\n",
      "['0.34', '0.66']\n",
      "['0.86', '0.14']\n",
      "['0.73', '0.27']\n",
      "['0.79', '0.21']\n",
      "['0.01', '0.99']\n",
      "['0.17', '0.83']\n",
      "['0.10', '0.90']\n",
      "['0.87', '0.13']\n",
      "['0.95', '0.05']\n",
      "['0.96', '0.04']\n",
      "['0.03', '0.97']\n",
      "['0.69', '0.31']\n",
      "['0.90', '0.10']\n",
      "['0.94', '0.06']\n",
      "['0.45', '0.55']\n",
      "['0.89', '0.11']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.88', '0.12']\n",
      "['0.83', '0.17']\n",
      "['0.82', '0.18']\n",
      "['0.96', '0.04']\n",
      "['0.36', '0.64']\n",
      "['0.95', '0.05']\n",
      "['0.03', '0.97']\n",
      "['0.19', '0.81']\n",
      "['0.54', '0.46']\n",
      "['0.98', '0.02']\n",
      "['0.92', '0.08']\n",
      "['0.95', '0.05']\n",
      "['0.80', '0.20']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.89', '0.11']\n",
      "['0.19', '0.81']\n",
      "['0.94', '0.06']\n",
      "['0.96', '0.04']\n",
      "['0.02', '0.98']\n",
      "['0.17', '0.83']\n",
      "['0.34', '0.66']\n",
      "['0.87', '0.13']\n",
      "['0.42', '0.58']\n",
      "['0.16', '0.84']\n",
      "['0.94', '0.06']\n",
      "['0.89', '0.11']\n",
      "['0.92', '0.08']\n",
      "['0.24', '0.76']\n",
      "['0.69', '0.31']\n",
      "['0.95', '0.05']\n",
      "['0.80', '0.20']\n",
      "['0.80', '0.20']\n",
      "['0.64', '0.36']\n",
      "['0.61', '0.39']\n",
      "['0.05', '0.95']\n",
      "['0.96', '0.04']\n",
      "['0.93', '0.07']\n",
      "['0.14', '0.86']\n",
      "['0.89', '0.11']\n",
      "['0.96', '0.04']\n",
      "['0.33', '0.67']\n",
      "['0.20', '0.80']\n",
      "['0.96', '0.04']\n",
      "['0.45', '0.55']\n",
      "['0.66', '0.34']\n",
      "['0.10', '0.90']\n",
      "['0.48', '0.52']\n",
      "['0.26', '0.74']\n",
      "['0.72', '0.28']\n",
      "['0.36', '0.64']\n",
      "['0.80', '0.20']\n",
      "['0.27', '0.73']\n",
      "['0.71', '0.29']\n",
      "['0.16', '0.84']\n",
      "['0.99', '0.01']\n",
      "['0.97', '0.03']\n",
      "['0.97', '0.03']\n",
      "['0.32', '0.68']\n",
      "['0.88', '0.12']\n",
      "['0.92', '0.08']\n",
      "['0.23', '0.77']\n",
      "['0.85', '0.15']\n",
      "['0.96', '0.04']\n",
      "['0.20', '0.80']\n",
      "['0.53', '0.47']\n",
      "['0.95', '0.05']\n",
      "['0.80', '0.20']\n",
      "['0.70', '0.30']\n",
      "['0.84', '0.16']\n",
      "['0.30', '0.70']\n",
      "['0.09', '0.91']\n",
      "['0.17', '0.83']\n",
      "['0.36', '0.64']\n",
      "['0.13', '0.87']\n",
      "['0.54', '0.46']\n",
      "['0.08', '0.92']\n",
      "['0.02', '0.98']\n",
      "['0.22', '0.78']\n",
      "['0.91', '0.09']\n",
      "['0.92', '0.08']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.79', '0.21']\n",
      "['0.76', '0.24']\n",
      "['0.73', '0.27']\n",
      "['0.80', '0.20']\n",
      "['0.99', '0.01']\n",
      "['0.03', '0.97']\n",
      "['0.01', '0.99']\n",
      "['0.93', '0.07']\n",
      "['0.71', '0.29']\n",
      "['0.91', '0.09']\n",
      "['0.62', '0.38']\n",
      "['0.52', '0.48']\n",
      "['0.17', '0.83']\n",
      "['0.21', '0.79']\n",
      "['0.03', '0.97']\n",
      "['0.94', '0.06']\n",
      "['0.36', '0.64']\n",
      "['0.69', '0.31']\n",
      "['0.31', '0.69']\n",
      "['0.60', '0.40']\n",
      "['0.16', '0.84']\n",
      "['0.43', '0.57']\n",
      "['0.13', '0.87']\n",
      "['0.74', '0.26']\n",
      "['0.08', '0.92']\n",
      "['0.30', '0.70']\n",
      "['0.74', '0.26']\n",
      "['0.63', '0.37']\n",
      "['0.19', '0.81']\n",
      "['0.05', '0.95']\n",
      "['0.22', '0.78']\n",
      "['0.68', '0.32']\n",
      "['0.92', '0.08']\n",
      "['0.03', '0.97']\n",
      "['0.70', '0.30']\n",
      "['0.97', '0.03']\n",
      "['0.90', '0.10']\n",
      "['0.98', '0.02']\n",
      "['0.82', '0.18']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.20', '0.80']\n",
      "['0.97', '0.03']\n",
      "['0.84', '0.16']\n",
      "['0.39', '0.61']\n",
      "['0.91', '0.09']\n",
      "['0.27', '0.73']\n",
      "['0.26', '0.74']\n",
      "['0.87', '0.13']\n",
      "['0.89', '0.11']\n",
      "['0.80', '0.20']\n",
      "['0.03', '0.97']\n",
      "['0.97', '0.03']\n",
      "['0.88', '0.12']\n",
      "['0.91', '0.09']\n",
      "['0.98', '0.02']\n",
      "['0.69', '0.31']\n",
      "['0.97', '0.03']\n",
      "['0.62', '0.38']\n",
      "['0.94', '0.06']\n",
      "['0.91', '0.09']\n",
      "['0.04', '0.96']\n",
      "['0.03', '0.97']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.98', '0.02']\n",
      "['0.82', '0.18']\n",
      "['0.25', '0.75']\n",
      "['0.97', '0.03']\n",
      "['0.98', '0.02']\n",
      "['0.95', '0.05']\n",
      "['0.19', '0.81']\n",
      "['0.80', '0.20']\n",
      "['0.04', '0.96']\n",
      "['0.95', '0.05']\n",
      "['0.78', '0.22']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.86', '0.14']\n",
      "['0.79', '0.21']\n",
      "['0.03', '0.97']\n",
      "['0.71', '0.29']\n",
      "['0.97', '0.03']\n",
      "['0.10', '0.90']\n",
      "['0.95', '0.05']\n",
      "['0.17', '0.83']\n",
      "['0.60', '0.40']\n",
      "['0.34', '0.66']\n",
      "['0.63', '0.37']\n",
      "['0.65', '0.35']\n",
      "['0.40', '0.60']\n",
      "['0.04', '0.96']\n",
      "['0.38', '0.62']\n",
      "['0.96', '0.04']\n",
      "['0.97', '0.03']\n",
      "['0.17', '0.83']\n",
      "['0.94', '0.06']\n",
      "['0.11', '0.89']\n",
      "['0.33', '0.67']\n",
      "['0.83', '0.17']\n",
      "['0.01', '0.99']\n",
      "['0.36', '0.64']\n",
      "['0.98', '0.02']\n",
      "['0.89', '0.11']\n",
      "['0.78', '0.22']\n",
      "['0.90', '0.10']\n",
      "['0.90', '0.10']\n",
      "['0.20', '0.80']\n",
      "['0.96', '0.04']\n",
      "['0.80', '0.20']\n",
      "['0.09', '0.91']\n",
      "['0.94', '0.06']\n",
      "['0.97', '0.03']\n",
      "['0.93', '0.07']\n",
      "['0.80', '0.20']\n",
      "['0.94', '0.06']\n",
      "['0.23', '0.77']\n",
      "['0.86', '0.14']\n",
      "['0.06', '0.94']\n",
      "['0.93', '0.07']\n",
      "['0.69', '0.31']\n",
      "['0.36', '0.64']\n",
      "['0.81', '0.19']\n",
      "['0.92', '0.08']\n",
      "['0.72', '0.28']\n",
      "['0.85', '0.15']\n",
      "['0.47', '0.53']\n",
      "['0.18', '0.82']\n",
      "['0.85', '0.15']\n",
      "['0.64', '0.36']\n",
      "['0.81', '0.19']\n",
      "['0.87', '0.13']\n",
      "['0.94', '0.06']\n",
      "['0.92', '0.08']\n",
      "['0.03', '0.97']\n",
      "['0.20', '0.80']\n",
      "['0.96', '0.04']\n",
      "['0.90', '0.10']\n",
      "['0.02', '0.98']\n",
      "['0.17', '0.83']\n",
      "['0.84', '0.16']\n",
      "['0.72', '0.28']\n",
      "['0.87', '0.13']\n",
      "['0.34', '0.66']\n",
      "['0.88', '0.12']\n",
      "['0.78', '0.22']\n",
      "['0.75', '0.25']\n",
      "['0.34', '0.66']\n",
      "['0.12', '0.88']\n",
      "['0.36', '0.64']\n",
      "['0.77', '0.23']\n",
      "['0.97', '0.03']\n",
      "['0.91', '0.09']\n",
      "['0.92', '0.08']\n",
      "['0.40', '0.60']\n",
      "['0.92', '0.08']\n",
      "['0.10', '0.90']\n",
      "['0.87', '0.13']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.80', '0.20']\n",
      "['0.06', '0.94']\n",
      "['0.83', '0.17']\n",
      "['0.80', '0.20']\n",
      "['0.26', '0.74']\n",
      "['0.97', '0.03']\n",
      "['0.28', '0.72']\n",
      "['0.85', '0.15']\n",
      "['0.97', '0.03']\n",
      "['0.95', '0.05']\n",
      "['0.78', '0.22']\n",
      "['0.87', '0.13']\n",
      "['0.51', '0.49']\n",
      "['0.06', '0.94']\n",
      "['0.54', '0.46']\n",
      "['0.39', '0.61']\n",
      "['0.03', '0.97']\n",
      "['0.22', '0.78']\n",
      "['0.77', '0.23']\n",
      "['0.30', '0.70']\n",
      "['0.93', '0.07']\n",
      "['0.34', '0.66']\n",
      "['0.89', '0.11']\n",
      "['0.23', '0.77']\n",
      "['0.57', '0.43']\n",
      "['0.73', '0.27']\n",
      "['0.12', '0.88']\n",
      "['0.75', '0.25']\n",
      "['0.89', '0.11']\n",
      "['0.09', '0.91']\n",
      "['0.80', '0.20']\n",
      "['0.15', '0.85']\n",
      "['0.24', '0.76']\n",
      "['0.96', '0.04']\n",
      "['0.12', '0.88']\n",
      "['0.06', '0.94']\n",
      "['0.80', '0.20']\n",
      "['0.14', '0.86']\n",
      "['0.36', '0.64']\n",
      "['0.06', '0.94']\n",
      "['0.96', '0.04']\n",
      "['0.78', '0.22']\n",
      "['0.01', '0.99']\n",
      "['0.17', '0.83']\n",
      "['0.91', '0.09']\n",
      "['0.79', '0.21']\n",
      "['0.79', '0.21']\n",
      "['0.03', '0.97']\n",
      "['0.58', '0.42']\n",
      "['0.17', '0.83']\n",
      "['0.96', '0.04']\n",
      "['0.92', '0.08']\n",
      "['0.76', '0.24']\n",
      "['0.36', '0.64']\n",
      "['0.80', '0.20']\n",
      "['0.43', '0.57']\n",
      "['0.80', '0.20']\n",
      "['0.62', '0.38']\n",
      "['0.62', '0.38']\n",
      "['0.34', '0.66']\n",
      "['0.96', '0.04']\n",
      "['0.95', '0.05']\n",
      "['0.25', '0.75']\n",
      "['0.72', '0.28']\n",
      "['0.91', '0.09']\n",
      "['0.96', '0.04']\n",
      "['0.80', '0.20']\n",
      "['0.96', '0.04']\n",
      "['0.12', '0.88']\n",
      "['0.91', '0.09']\n",
      "['0.71', '0.29']\n",
      "['0.02', '0.98']\n",
      "['0.71', '0.29']\n",
      "['0.91', '0.09']\n",
      "['0.87', '0.13']\n",
      "['0.95', '0.05']\n",
      "['0.03', '0.97']\n",
      "['0.28', '0.72']\n",
      "['0.80', '0.20']\n",
      "['0.37', '0.63']\n",
      "['0.84', '0.16']\n",
      "['0.44', '0.56']\n",
      "['0.63', '0.37']\n",
      "['0.34', '0.66']\n",
      "['0.92', '0.08']\n",
      "['0.80', '0.20']\n",
      "['0.57', '0.43']\n",
      "['0.05', '0.95']\n",
      "['0.01', '0.99']\n",
      "['0.92', '0.08']\n",
      "['0.78', '0.22']\n",
      "['0.57', '0.43']\n",
      "['0.81', '0.19']\n",
      "['0.01', '0.99']\n",
      "['0.25', '0.75']\n",
      "['0.92', '0.08']\n",
      "['0.95', '0.05']\n",
      "['0.98', '0.02']\n",
      "['0.80', '0.20']\n",
      "['0.95', '0.05']\n",
      "['0.70', '0.30']\n",
      "['0.67', '0.33']\n",
      "['0.80', '0.20']\n",
      "['0.37', '0.63']\n",
      "['0.92', '0.08']\n",
      "['0.89', '0.11']\n",
      "['0.96', '0.04']\n",
      "['0.91', '0.09']\n",
      "['0.07', '0.93']\n",
      "['0.94', '0.06']\n",
      "['0.96', '0.04']\n",
      "['0.22', '0.78']\n",
      "['0.90', '0.10']\n",
      "['0.27', '0.73']\n",
      "['0.48', '0.52']\n",
      "['0.96', '0.04']\n",
      "['0.05', '0.95']\n",
      "['0.34', '0.66']\n",
      "['0.91', '0.09']\n",
      "['0.44', '0.56']\n",
      "['0.20', '0.80']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.73', '0.27']\n",
      "['0.80', '0.20']\n",
      "['0.04', '0.96']\n",
      "['0.91', '0.09']\n",
      "['0.02', '0.98']\n",
      "['0.95', '0.05']\n",
      "['0.95', '0.05']\n",
      "['0.89', '0.11']\n",
      "['0.62', '0.38']\n",
      "['0.47', '0.53']\n",
      "['0.88', '0.12']\n",
      "['0.80', '0.20']\n",
      "['0.94', '0.06']\n",
      "['0.87', '0.13']\n",
      "['0.72', '0.28']\n",
      "['0.80', '0.20']\n",
      "['0.49', '0.51']\n",
      "['0.97', '0.03']\n",
      "['0.94', '0.06']\n",
      "['0.59', '0.41']\n",
      "['0.96', '0.04']\n",
      "['0.90', '0.10']\n",
      "['0.15', '0.85']\n",
      "['0.16', '0.84']\n",
      "['0.39', '0.61']\n",
      "['0.87', '0.13']\n",
      "['0.47', '0.53']\n",
      "['0.18', '0.82']\n",
      "['0.94', '0.06']\n",
      "['0.80', '0.20']\n",
      "['0.36', '0.64']\n",
      "['0.99', '0.01']\n",
      "['0.03', '0.97']\n",
      "['0.90', '0.10']\n",
      "['0.94', '0.06']\n",
      "['0.36', '0.64']\n",
      "['0.95', '0.05']\n",
      "['0.96', '0.04']\n",
      "['0.17', '0.83']\n",
      "['0.00', '1.00']\n",
      "['0.78', '0.22']\n",
      "['0.92', '0.08']\n",
      "['0.09', '0.91']\n",
      "['0.77', '0.23']\n",
      "['0.88', '0.12']\n",
      "['0.36', '0.64']\n",
      "['0.83', '0.17']\n",
      "['0.15', '0.85']\n",
      "['0.88', '0.12']\n",
      "['0.37', '0.63']\n",
      "['0.85', '0.15']\n",
      "['0.71', '0.29']\n",
      "['0.96', '0.04']\n",
      "['0.94', '0.06']\n",
      "['0.94', '0.06']\n",
      "['0.23', '0.77']\n",
      "['0.95', '0.05']\n",
      "['0.95', '0.05']\n",
      "['0.01', '0.99']\n",
      "['0.93', '0.07']\n",
      "['0.63', '0.37']\n",
      "['0.98', '0.02']\n",
      "['0.01', '0.99']\n",
      "['0.98', '0.02']\n",
      "['0.44', '0.56']\n",
      "['0.32', '0.68']\n",
      "['0.84', '0.16']\n",
      "['0.88', '0.12']\n",
      "['0.70', '0.30']\n",
      "['0.35', '0.65']\n",
      "['0.90', '0.10']\n",
      "['0.80', '0.20']\n",
      "['0.89', '0.11']\n",
      "['0.96', '0.04']\n",
      "['0.03', '0.97']\n",
      "['0.96', '0.04']\n",
      "['0.88', '0.12']\n",
      "['0.02', '0.98']\n",
      "['0.88', '0.12']\n",
      "['0.91', '0.09']\n",
      "['0.03', '0.97']\n",
      "['0.42', '0.58']\n",
      "['0.11', '0.89']\n",
      "['0.15', '0.85']\n",
      "['0.52', '0.48']\n",
      "['0.94', '0.06']\n",
      "['0.79', '0.21']\n",
      "['0.09', '0.91']\n",
      "['0.31', '0.69']\n",
      "['0.80', '0.20']\n",
      "['0.93', '0.07']\n",
      "['0.91', '0.09']\n",
      "['0.32', '0.68']\n",
      "['0.76', '0.24']\n",
      "['0.94', '0.06']\n",
      "['0.36', '0.64']\n",
      "['0.23', '0.77']\n",
      "['0.83', '0.17']\n",
      "['0.03', '0.97']\n",
      "['0.96', '0.04']\n",
      "['0.87', '0.13']\n",
      "['0.23', '0.77']\n",
      "['0.91', '0.09']\n",
      "['0.96', '0.04']\n",
      "['0.07', '0.93']\n",
      "['0.91', '0.09']\n",
      "['0.90', '0.10']\n",
      "['0.36', '0.64']\n",
      "['0.44', '0.56']\n",
      "['0.92', '0.08']\n",
      "['0.18', '0.82']\n",
      "['0.82', '0.18']\n",
      "['0.94', '0.06']\n",
      "['0.97', '0.03']\n",
      "['0.42', '0.58']\n",
      "['0.90', '0.10']\n",
      "['0.41', '0.59']\n",
      "['0.75', '0.25']\n",
      "['0.80', '0.20']\n",
      "['0.28', '0.72']\n",
      "['0.25', '0.75']\n",
      "['0.98', '0.02']\n",
      "['0.80', '0.20']\n",
      "['0.25', '0.75']\n",
      "['0.96', '0.04']\n",
      "['0.56', '0.44']\n",
      "['0.87', '0.13']\n",
      "['0.13', '0.87']\n",
      "['0.87', '0.13']\n",
      "['0.97', '0.03']\n",
      "['0.05', '0.95']\n",
      "['0.36', '0.64']\n",
      "['0.91', '0.09']\n",
      "['0.91', '0.09']\n",
      "['0.95', '0.05']\n",
      "['0.96', '0.04']\n",
      "['0.27', '0.73']\n",
      "['0.80', '0.20']\n",
      "['0.05', '0.95']\n",
      "['0.89', '0.11']\n",
      "['0.66', '0.34']\n",
      "['0.97', '0.03']\n",
      "['0.18', '0.82']\n",
      "['0.94', '0.06']\n",
      "['0.88', '0.12']\n",
      "['0.06', '0.94']\n",
      "['0.92', '0.08']\n",
      "['0.93', '0.07']\n",
      "['0.96', '0.04']\n",
      "['0.80', '0.20']\n",
      "['0.14', '0.86']\n",
      "['0.01', '0.99']\n",
      "['0.13', '0.87']\n",
      "['0.56', '0.44']\n",
      "['0.91', '0.09']\n",
      "['0.04', '0.96']\n",
      "['0.85', '0.15']\n",
      "['0.08', '0.92']\n",
      "['0.96', '0.04']\n",
      "['0.02', '0.98']\n",
      "['0.60', '0.40']\n",
      "['0.04', '0.96']\n",
      "['0.92', '0.08']\n",
      "['0.95', '0.05']\n",
      "['0.96', '0.04']\n",
      "['0.84', '0.16']\n",
      "['0.93', '0.07']\n",
      "['0.15', '0.85']\n",
      "['0.13', '0.87']\n",
      "['0.80', '0.20']\n",
      "['0.60', '0.40']\n",
      "['0.80', '0.20']\n",
      "['0.01', '0.99']\n",
      "['0.97', '0.03']\n",
      "['0.96', '0.04']\n",
      "['0.03', '0.97']\n",
      "['0.24', '0.76']\n",
      "['0.54', '0.46']\n",
      "['0.36', '0.64']\n",
      "['0.67', '0.33']\n",
      "['0.96', '0.04']\n",
      "['0.84', '0.16']\n",
      "['0.19', '0.81']\n",
      "['0.36', '0.64']\n",
      "['0.03', '0.97']\n",
      "['0.32', '0.68']\n",
      "['0.96', '0.04']\n",
      "['0.18', '0.82']\n",
      "['0.96', '0.04']\n",
      "['0.97', '0.03']\n",
      "['0.90', '0.10']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.19', '0.81']\n",
      "['0.96', '0.04']\n",
      "['0.87', '0.13']\n",
      "['0.12', '0.88']\n",
      "['0.04', '0.96']\n",
      "['0.85', '0.15']\n",
      "['0.95', '0.05']\n",
      "['0.88', '0.12']\n",
      "['0.96', '0.04']\n",
      "['0.02', '0.98']\n",
      "['0.21', '0.79']\n",
      "['0.23', '0.77']\n",
      "['0.77', '0.23']\n",
      "['0.03', '0.97']\n",
      "['0.94', '0.06']\n",
      "['0.94', '0.06']\n",
      "['0.02', '0.98']\n",
      "['0.80', '0.20']\n",
      "['0.01', '0.99']\n",
      "['0.04', '0.96']\n",
      "['0.96', '0.04']\n",
      "['0.92', '0.08']\n",
      "['0.05', '0.95']\n",
      "['0.28', '0.72']\n",
      "['0.19', '0.81']\n",
      "['0.69', '0.31']\n",
      "['0.96', '0.04']\n",
      "['0.98', '0.02']\n",
      "['0.29', '0.71']\n",
      "['0.94', '0.06']\n",
      "['0.03', '0.97']\n",
      "['0.93', '0.07']\n",
      "['0.17', '0.83']\n",
      "['0.95', '0.05']\n",
      "['0.78', '0.22']\n",
      "['0.89', '0.11']\n",
      "['0.31', '0.69']\n",
      "['0.96', '0.04']\n",
      "['0.17', '0.83']\n",
      "['0.02', '0.98']\n",
      "['0.60', '0.40']\n",
      "['0.91', '0.09']\n",
      "['0.36', '0.64']\n",
      "['0.05', '0.95']\n",
      "['0.00', '1.00']\n",
      "['0.93', '0.07']\n",
      "['0.29', '0.71']\n",
      "['0.87', '0.13']\n",
      "['0.98', '0.02']\n",
      "['0.90', '0.10']\n",
      "['0.93', '0.07']\n",
      "['0.76', '0.24']\n",
      "['0.84', '0.16']\n",
      "['0.31', '0.69']\n",
      "['0.89', '0.11']\n",
      "['0.31', '0.69']\n",
      "['0.97', '0.03']\n",
      "['0.84', '0.16']\n",
      "['0.54', '0.46']\n",
      "['0.97', '0.03']\n",
      "['0.02', '0.98']\n",
      "['0.65', '0.35']\n",
      "['0.96', '0.04']\n",
      "['0.32', '0.68']\n",
      "['0.09', '0.91']\n",
      "['0.09', '0.91']\n",
      "['0.89', '0.11']\n",
      "['0.36', '0.64']\n",
      "['0.08', '0.92']\n",
      "['0.12', '0.88']\n",
      "['0.90', '0.10']\n",
      "['0.96', '0.04']\n",
      "['0.16', '0.84']\n",
      "['0.96', '0.04']\n",
      "['0.80', '0.20']\n",
      "['0.95', '0.05']\n",
      "['0.89', '0.11']\n",
      "['0.21', '0.79']\n",
      "['0.80', '0.20']\n",
      "['0.88', '0.12']\n",
      "['0.99', '0.01']\n",
      "['0.91', '0.09']\n",
      "['0.96', '0.04']\n",
      "['0.92', '0.08']\n",
      "['0.79', '0.21']\n",
      "['0.88', '0.12']\n",
      "['0.84', '0.16']\n",
      "['0.97', '0.03']\n",
      "['0.05', '0.95']\n",
      "['0.12', '0.88']\n",
      "['0.36', '0.64']\n",
      "['0.97', '0.03']\n",
      "['0.03', '0.97']\n",
      "['0.12', '0.88']\n",
      "['0.05', '0.95']\n",
      "['0.48', '0.52']\n",
      "['0.69', '0.31']\n",
      "['0.46', '0.54']\n",
      "['0.05', '0.95']\n",
      "['0.90', '0.10']\n",
      "['0.07', '0.93']\n",
      "['0.93', '0.07']\n",
      "['0.96', '0.04']\n",
      "['0.94', '0.06']\n",
      "['0.85', '0.15']\n",
      "['0.96', '0.04']\n",
      "['0.78', '0.22']\n",
      "['0.81', '0.19']\n",
      "['0.58', '0.42']\n",
      "['0.47', '0.53']\n",
      "['0.80', '0.20']\n",
      "['0.18', '0.82']\n",
      "['0.99', '0.01']\n",
      "['0.91', '0.09']\n",
      "['0.95', '0.05']\n",
      "['0.90', '0.10']\n",
      "['0.91', '0.09']\n",
      "['0.03', '0.97']\n",
      "['0.57', '0.43']\n",
      "['0.96', '0.04']\n",
      "['0.64', '0.36']\n",
      "['0.96', '0.04']\n",
      "['0.13', '0.87']\n",
      "['0.80', '0.20']\n",
      "['0.76', '0.24']\n",
      "['0.97', '0.03']\n",
      "['0.20', '0.80']\n",
      "['0.94', '0.06']\n",
      "['0.26', '0.74']\n",
      "['0.06', '0.94']\n",
      "['0.03', '0.97']\n",
      "['0.01', '0.99']\n",
      "['0.73', '0.27']\n",
      "['0.91', '0.09']\n",
      "['0.15', '0.85']\n",
      "['0.39', '0.61']\n",
      "['0.03', '0.97']\n",
      "['0.17', '0.83']\n",
      "['0.96', '0.04']\n",
      "['0.08', '0.92']\n",
      "['0.96', '0.04']\n",
      "['0.92', '0.08']\n",
      "['0.04', '0.96']\n",
      "['0.36', '0.64']\n",
      "['0.02', '0.98']\n",
      "['0.89', '0.11']\n",
      "['0.20', '0.80']\n",
      "['0.53', '0.47']\n",
      "['0.90', '0.10']\n",
      "['0.23', '0.77']\n",
      "['0.43', '0.57']\n",
      "['0.72', '0.28']\n",
      "['0.96', '0.04']\n",
      "['0.20', '0.80']\n",
      "['0.04', '0.96']\n",
      "['0.01', '0.99']\n",
      "['0.91', '0.09']\n",
      "['0.91', '0.09']\n",
      "['0.85', '0.15']\n",
      "['0.91', '0.09']\n",
      "['0.80', '0.20']\n",
      "['0.19', '0.81']\n",
      "['0.26', '0.74']\n",
      "['0.07', '0.93']\n",
      "['0.34', '0.66']\n",
      "['0.36', '0.64']\n",
      "['0.54', '0.46']\n",
      "['0.17', '0.83']\n",
      "['0.67', '0.33']\n",
      "['0.93', '0.07']\n",
      "['0.73', '0.27']\n",
      "['0.73', '0.27']\n",
      "['0.88', '0.12']\n",
      "['0.32', '0.68']\n",
      "['0.08', '0.92']\n",
      "['0.36', '0.64']\n",
      "['0.99', '0.01']\n",
      "['0.17', '0.83']\n",
      "['0.35', '0.65']\n",
      "['0.95', '0.05']\n",
      "['0.98', '0.02']\n",
      "['0.93', '0.07']\n",
      "['0.29', '0.71']\n",
      "['0.60', '0.40']\n",
      "['0.12', '0.88']\n",
      "['0.60', '0.40']\n",
      "['0.80', '0.20']\n",
      "['0.98', '0.02']\n",
      "['0.45', '0.55']\n",
      "['0.86', '0.14']\n",
      "['0.80', '0.20']\n",
      "['0.80', '0.20']\n",
      "['0.20', '0.80']\n",
      "['0.90', '0.10']\n",
      "['0.88', '0.12']\n",
      "['0.87', '0.13']\n",
      "['0.94', '0.06']\n",
      "['0.26', '0.74']\n",
      "['0.93', '0.07']\n",
      "['0.25', '0.75']\n",
      "['0.10', '0.90']\n",
      "['0.84', '0.16']\n",
      "['0.96', '0.04']\n",
      "['0.69', '0.31']\n",
      "['0.88', '0.12']\n",
      "['0.97', '0.03']\n",
      "['0.18', '0.82']\n",
      "['0.82', '0.18']\n",
      "['0.96', '0.04']\n",
      "['0.16', '0.84']\n",
      "['0.02', '0.98']\n",
      "['0.44', '0.56']\n",
      "['0.96', '0.04']\n",
      "['0.03', '0.97']\n",
      "['0.80', '0.20']\n",
      "['0.17', '0.83']\n",
      "['0.33', '0.67']\n",
      "['0.04', '0.96']\n",
      "['0.90', '0.10']\n",
      "['0.03', '0.97']\n",
      "['0.96', '0.04']\n",
      "['0.98', '0.02']\n",
      "['0.63', '0.37']\n",
      "['0.87', '0.13']\n",
      "['0.28', '0.72']\n",
      "['0.36', '0.64']\n",
      "['0.90', '0.10']\n",
      "['0.16', '0.84']\n",
      "['0.21', '0.79']\n",
      "['0.80', '0.20']\n",
      "['0.13', '0.87']\n",
      "['0.03', '0.97']\n",
      "['0.16', '0.84']\n",
      "['0.02', '0.98']\n",
      "['0.86', '0.14']\n",
      "['0.96', '0.04']\n",
      "['0.03', '0.97']\n",
      "['0.14', '0.86']\n",
      "['0.93', '0.07']\n",
      "['0.36', '0.64']\n",
      "['0.85', '0.15']\n",
      "['0.12', '0.88']\n",
      "['0.32', '0.68']\n",
      "['0.71', '0.29']\n",
      "['0.96', '0.04']\n",
      "['0.04', '0.96']\n",
      "['0.85', '0.15']\n",
      "['0.27', '0.73']\n",
      "['0.08', '0.92']\n",
      "['0.96', '0.04']\n",
      "['0.93', '0.07']\n",
      "['0.85', '0.15']\n",
      "['0.92', '0.08']\n",
      "['0.96', '0.04']\n",
      "['0.01', '0.99']\n",
      "['0.39', '0.61']\n",
      "['0.45', '0.55']\n",
      "['0.96', '0.04']\n",
      "['0.22', '0.78']\n",
      "['0.04', '0.96']\n",
      "['0.14', '0.86']\n",
      "['0.84', '0.16']\n",
      "['0.96', '0.04']\n",
      "['0.92', '0.08']\n",
      "['0.97', '0.03']\n",
      "['0.22', '0.78']\n",
      "['0.03', '0.97']\n",
      "['0.12', '0.88']\n",
      "['0.96', '0.04']\n",
      "['0.08', '0.92']\n",
      "['0.89', '0.11']\n",
      "['0.91', '0.09']\n",
      "['0.97', '0.03']\n",
      "['0.97', '0.03']\n",
      "['0.18', '0.82']\n",
      "['0.94', '0.06']\n",
      "['0.80', '0.20']\n",
      "['0.93', '0.07']\n",
      "['0.05', '0.95']\n",
      "['0.96', '0.04']\n",
      "['0.31', '0.69']\n",
      "['0.80', '0.20']\n",
      "['0.49', '0.51']\n",
      "['0.80', '0.20']\n",
      "['0.91', '0.09']\n",
      "['0.82', '0.18']\n",
      "['0.09', '0.91']\n",
      "['0.48', '0.52']\n",
      "['0.91', '0.09']\n",
      "['0.36', '0.64']\n",
      "['0.80', '0.20']\n",
      "['0.08', '0.92']\n",
      "['0.01', '0.99']\n",
      "['0.71', '0.29']\n",
      "['0.06', '0.94']\n",
      "['0.03', '0.97']\n",
      "['0.08', '0.92']\n",
      "['0.86', '0.14']\n",
      "['0.92', '0.08']\n",
      "['0.37', '0.63']\n",
      "['0.91', '0.09']\n",
      "['0.31', '0.69']\n",
      "['0.82', '0.18']\n",
      "['0.94', '0.06']\n",
      "['0.20', '0.80']\n",
      "['0.87', '0.13']\n",
      "['0.14', '0.86']\n",
      "['0.32', '0.68']\n",
      "['0.85', '0.15']\n",
      "['0.03', '0.97']\n",
      "['0.83', '0.17']\n",
      "['0.53', '0.47']\n",
      "['0.14', '0.86']\n",
      "['0.12', '0.88']\n",
      "['0.08', '0.92']\n",
      "['0.31', '0.69']\n",
      "['0.94', '0.06']\n",
      "['0.80', '0.20']\n",
      "['0.70', '0.30']\n",
      "['0.21', '0.79']\n",
      "['0.48', '0.52']\n",
      "['0.62', '0.38']\n",
      "['0.51', '0.49']\n",
      "['0.39', '0.61']\n",
      "['0.92', '0.08']\n",
      "['0.77', '0.23']\n",
      "['0.80', '0.20']\n",
      "['0.80', '0.20']\n",
      "['0.01', '0.99']\n",
      "['0.36', '0.64']\n",
      "['0.96', '0.04']\n",
      "['0.62', '0.38']\n",
      "['0.93', '0.07']\n",
      "['0.17', '0.83']\n",
      "['0.86', '0.14']\n",
      "['0.42', '0.58']\n",
      "['0.68', '0.32']\n",
      "['0.80', '0.20']\n",
      "['0.20', '0.80']\n",
      "['0.80', '0.20']\n",
      "['0.91', '0.09']\n",
      "['0.80', '0.20']\n",
      "['0.95', '0.05']\n",
      "['0.04', '0.96']\n",
      "['0.88', '0.12']\n",
      "['0.79', '0.21']\n",
      "['0.72', '0.28']\n",
      "['0.90', '0.10']\n",
      "['0.94', '0.06']\n",
      "['0.03', '0.97']\n",
      "['0.80', '0.20']\n",
      "['0.83', '0.17']\n",
      "['0.76', '0.24']\n",
      "['0.02', '0.98']\n",
      "['0.99', '0.01']\n",
      "['0.25', '0.75']\n",
      "['0.13', '0.87']\n",
      "['0.25', '0.75']\n",
      "['0.21', '0.79']\n",
      "['0.51', '0.49']\n",
      "['0.62', '0.38']\n",
      "['0.80', '0.20']\n",
      "['0.80', '0.20']\n",
      "['0.94', '0.06']\n",
      "['0.76', '0.24']\n",
      "['0.31', '0.69']\n",
      "['0.03', '0.97']\n",
      "['0.17', '0.83']\n",
      "['0.99', '0.01']\n",
      "['0.88', '0.12']\n",
      "['0.94', '0.06']\n",
      "['0.06', '0.94']\n",
      "['0.89', '0.11']\n",
      "['0.36', '0.64']\n",
      "['0.95', '0.05']\n",
      "['0.82', '0.18']\n",
      "['0.28', '0.72']\n",
      "['0.80', '0.20']\n",
      "['0.96', '0.04']\n",
      "['0.95', '0.05']\n",
      "['0.95', '0.05']\n",
      "['0.80', '0.20']\n",
      "['0.02', '0.98']\n",
      "['0.88', '0.12']\n",
      "['0.90', '0.10']\n",
      "['0.17', '0.83']\n",
      "['0.58', '0.42']\n",
      "['0.86', '0.14']\n",
      "['0.05', '0.95']\n",
      "['0.94', '0.06']\n",
      "['0.98', '0.02']\n",
      "['0.95', '0.05']\n",
      "['0.75', '0.25']\n",
      "['0.48', '0.52']\n",
      "['0.94', '0.06']\n",
      "['0.36', '0.64']\n",
      "['0.96', '0.04']\n",
      "['0.80', '0.20']\n",
      "['0.97', '0.03']\n",
      "['0.25', '0.75']\n",
      "['0.42', '0.58']\n",
      "['0.92', '0.08']\n",
      "['0.05', '0.95']\n",
      "['0.67', '0.33']\n",
      "['0.18', '0.82']\n",
      "['0.96', '0.04']\n",
      "['0.28', '0.72']\n",
      "['0.96', '0.04']\n",
      "['0.94', '0.06']\n",
      "['0.97', '0.03']\n",
      "['0.34', '0.66']\n",
      "['0.94', '0.06']\n",
      "['0.17', '0.83']\n",
      "['0.85', '0.15']\n",
      "['0.56', '0.44']\n",
      "['0.22', '0.78']\n",
      "['0.93', '0.07']\n",
      "['0.95', '0.05']\n",
      "['0.98', '0.02']\n",
      "['0.91', '0.09']\n",
      "['0.55', '0.45']\n",
      "['0.79', '0.21']\n",
      "['0.92', '0.08']\n",
      "['0.05', '0.95']\n",
      "['0.92', '0.08']\n",
      "['0.39', '0.61']\n",
      "['0.67', '0.33']\n",
      "['0.49', '0.51']\n",
      "['0.80', '0.20']\n",
      "['0.97', '0.03']\n",
      "['0.01', '0.99']\n",
      "['0.28', '0.72']\n",
      "['0.96', '0.04']\n",
      "['0.83', '0.17']\n",
      "['0.85', '0.15']\n",
      "['0.53', '0.47']\n",
      "['0.04', '0.96']\n",
      "['0.92', '0.08']\n",
      "['0.09', '0.91']\n",
      "['0.02', '0.98']\n",
      "['0.98', '0.02']\n",
      "['0.06', '0.94']\n",
      "['0.96', '0.04']\n",
      "['0.97', '0.03']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.80', '0.20']\n",
      "['0.47', '0.53']\n",
      "['0.24', '0.76']\n",
      "['0.88', '0.12']\n",
      "['0.02', '0.98']\n",
      "['0.38', '0.62']\n",
      "['0.97', '0.03']\n",
      "['0.25', '0.75']\n",
      "['0.70', '0.30']\n",
      "['0.07', '0.93']\n",
      "['0.49', '0.51']\n",
      "['0.41', '0.59']\n",
      "['0.12', '0.88']\n",
      "['0.76', '0.24']\n",
      "['0.24', '0.76']\n",
      "['0.48', '0.52']\n",
      "['0.96', '0.04']\n",
      "['0.98', '0.02']\n",
      "['0.06', '0.94']\n",
      "['0.87', '0.13']\n",
      "['0.80', '0.20']\n",
      "['0.28', '0.72']\n",
      "['0.32', '0.68']\n",
      "['0.03', '0.97']\n",
      "['0.04', '0.96']\n",
      "['0.89', '0.11']\n",
      "['0.04', '0.96']\n",
      "['0.10', '0.90']\n",
      "['0.97', '0.03']\n",
      "['0.47', '0.53']\n",
      "['0.98', '0.02']\n",
      "['0.96', '0.04']\n",
      "['0.80', '0.20']\n",
      "['0.47', '0.53']\n",
      "['0.57', '0.43']\n",
      "['0.91', '0.09']\n",
      "['0.02', '0.98']\n",
      "['0.04', '0.96']\n",
      "['0.54', '0.46']\n",
      "['0.79', '0.21']\n",
      "['0.17', '0.83']\n",
      "['0.39', '0.61']\n",
      "['0.98', '0.02']\n",
      "['0.94', '0.06']\n",
      "['0.91', '0.09']\n",
      "['0.19', '0.81']\n",
      "['0.96', '0.04']\n",
      "['0.03', '0.97']\n",
      "['0.90', '0.10']\n",
      "['0.79', '0.21']\n",
      "['0.98', '0.02']\n",
      "['0.36', '0.64']\n",
      "['0.79', '0.21']\n",
      "['0.27', '0.73']\n",
      "['0.96', '0.04']\n",
      "['0.96', '0.04']\n",
      "['0.25', '0.75']\n",
      "['0.96', '0.04']\n",
      "['0.26', '0.74']\n",
      "['0.30', '0.70']\n",
      "['0.96', '0.04']\n",
      "['0.66', '0.34']\n",
      "['0.94', '0.06']\n",
      "['0.01', '0.99']\n",
      "['0.39', '0.61']\n",
      "['0.23', '0.77']\n",
      "['0.94', '0.06']\n",
      "['0.93', '0.07']\n",
      "['0.91', '0.09']\n"
     ]
    }
   ],
   "source": [
    "# Predict the probabilities of the test set\n",
    "proba = best_gbm_model.predict_proba(X_test)\n",
    "\n",
    "# Print the predicted probabilities\n",
    "proba\n",
    "\n",
    "print(\"Predicted Probabilities:\")\n",
    "for probs in proba:\n",
    "    formatted_probs = [f\"{prob:.2f}\" for prob in probs]\n",
    "    print(formatted_probs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1848, 2)"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "proba.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_test = pd.DataFrame(X_test)\n",
    "df_test['Convertion'] = best_gbm_model.predict(X_test)   \n",
    "df_test['prob_0'] = proba[:,0] \n",
    "df_test['prob_1'] = proba[:,1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Convertion</th>\n",
       "      <th>prob_0</th>\n",
       "      <th>prob_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4608</th>\n",
       "      <td>0</td>\n",
       "      <td>0.812310</td>\n",
       "      <td>0.187690</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7935</th>\n",
       "      <td>0</td>\n",
       "      <td>0.901450</td>\n",
       "      <td>0.098550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4043</th>\n",
       "      <td>0</td>\n",
       "      <td>0.991969</td>\n",
       "      <td>0.008031</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7821</th>\n",
       "      <td>0</td>\n",
       "      <td>0.914878</td>\n",
       "      <td>0.085122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>856</th>\n",
       "      <td>0</td>\n",
       "      <td>0.868466</td>\n",
       "      <td>0.131534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7387</th>\n",
       "      <td>1</td>\n",
       "      <td>0.394084</td>\n",
       "      <td>0.605916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3063</th>\n",
       "      <td>1</td>\n",
       "      <td>0.227499</td>\n",
       "      <td>0.772501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>603</th>\n",
       "      <td>0</td>\n",
       "      <td>0.942848</td>\n",
       "      <td>0.057152</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4210</th>\n",
       "      <td>0</td>\n",
       "      <td>0.925776</td>\n",
       "      <td>0.074224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7352</th>\n",
       "      <td>0</td>\n",
       "      <td>0.909170</td>\n",
       "      <td>0.090830</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1848 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Convertion    prob_0    prob_1\n",
       "4608           0  0.812310  0.187690\n",
       "7935           0  0.901450  0.098550\n",
       "4043           0  0.991969  0.008031\n",
       "7821           0  0.914878  0.085122\n",
       "856            0  0.868466  0.131534\n",
       "...          ...       ...       ...\n",
       "7387           1  0.394084  0.605916\n",
       "3063           1  0.227499  0.772501\n",
       "603            0  0.942848  0.057152\n",
       "4210           0  0.925776  0.074224\n",
       "7352           0  0.909170  0.090830\n",
       "\n",
       "[1848 rows x 3 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#show only the final 3 columns and without the index\n",
    "df_test[['Convertion','prob_0','prob_1',]]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Rounding the values and converting them to percentages\n",
    "df_test['prob_0'] = (df_test['prob_0'] * 100).round(2)\n",
    "df_test['prob_1'] = (df_test['prob_1'] * 100).round(2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_leads = pickle.dump(leads, open(\"leads_model.pkl\", \"wb\"))\n",
    "df_leads"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = leads.drop(\"Converted\", axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# Define the Gradient Boosting Model again\n",
    "best_gbm_model = GradientBoostingClassifier(learning_rate=0.1, max_depth=3, min_samples_leaf=2,\n",
    "                                            min_samples_split=2, n_estimators=300, subsample=1.0, random_state=100)\n",
    "best_gbm_model.fit(X,y)\n",
    "# Save the model structure to a file\n",
    "model = pickle.dump(best_gbm_model, open(\"final_model2.pkl\", \"wb\"))\n",
    "\n",
    "model"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
